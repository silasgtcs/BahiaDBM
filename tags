!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ACAO_CRIAR_ATRIBUTO_H	acoes/acao_criar_atributo.h	2;"	d
ACAO_CRIAR_LIGACAO_H	acoes/acao_criar_ligacao.h	2;"	d
ACAO_CRIAR_POLIGONO_H	acoes/acao_criar_poligono.h	2;"	d
ACAO_MOVER_H	acoes/acao_mover.h	2;"	d
ACOESPILHA_H	acoespilha.h	4;"	d
ACOES_H	acao.h	4;"	d
Acao	acao.cpp	/^Acao::Acao()$/;"	f	class:Acao	signature:()
Acao	acao.h	/^class Acao \/\/ Interface para as acoes$/;"	c
Acao::Acao	acao.cpp	/^Acao::Acao()$/;"	f	class:Acao	signature:()
Acao::desfazerAcao	acao.h	/^    virtual void desfazerAcao() = 0;$/;"	p	class:Acao	access:public	signature:()
Acao::fazerAcao	acao.h	/^    virtual void fazerAcao() = 0;$/;"	p	class:Acao	access:public	signature:()
Acao::podeDesfazer	acao.h	/^    virtual bool podeDesfazer() = 0;$/;"	p	class:Acao	access:public	signature:()
Acao::~Acao	acao.h	/^    virtual ~Acao() {}$/;"	f	class:Acao	access:public	signature:()
AcaoCriarAtributo	acoes/acao_criar_atributo.cpp	/^AcaoCriarAtributo::AcaoCriarAtributo(QGraphicsScene * scene, Atributo::Tipo tipo, QString nome, QPointF posicao)$/;"	f	class:AcaoCriarAtributo	signature:(QGraphicsScene * scene, Atributo::Tipo tipo, QString nome, QPointF posicao)
AcaoCriarAtributo	acoes/acao_criar_atributo.h	/^    AcaoCriarAtributo(QGraphicsScene * scene, Atributo::Tipo tipo, QString nome, QPointF posicao);$/;"	p	class:AcaoCriarAtributo	access:public	signature:(QGraphicsScene * scene, Atributo::Tipo tipo, QString nome, QPointF posicao)
AcaoCriarAtributo	acoes/acao_criar_atributo.h	/^class AcaoCriarAtributo : public Acao$/;"	c	inherits:Acao
AcaoCriarAtributo::AcaoCriarAtributo	acoes/acao_criar_atributo.cpp	/^AcaoCriarAtributo::AcaoCriarAtributo(QGraphicsScene * scene, Atributo::Tipo tipo, QString nome, QPointF posicao)$/;"	f	class:AcaoCriarAtributo	signature:(QGraphicsScene * scene, Atributo::Tipo tipo, QString nome, QPointF posicao)
AcaoCriarAtributo::AcaoCriarAtributo	acoes/acao_criar_atributo.h	/^    AcaoCriarAtributo(QGraphicsScene * scene, Atributo::Tipo tipo, QString nome, QPointF posicao);$/;"	p	class:AcaoCriarAtributo	access:public	signature:(QGraphicsScene * scene, Atributo::Tipo tipo, QString nome, QPointF posicao)
AcaoCriarAtributo::atributo	acoes/acao_criar_atributo.h	/^    Atributo * atributo;$/;"	m	class:AcaoCriarAtributo	access:private
AcaoCriarAtributo::desfazerAcao	acoes/acao_criar_atributo.cpp	/^void AcaoCriarAtributo::desfazerAcao()$/;"	f	class:AcaoCriarAtributo	signature:()
AcaoCriarAtributo::desfazerAcao	acoes/acao_criar_atributo.h	/^    virtual void desfazerAcao();$/;"	p	class:AcaoCriarAtributo	access:public	signature:()
AcaoCriarAtributo::fazerAcao	acoes/acao_criar_atributo.cpp	/^void AcaoCriarAtributo::fazerAcao()$/;"	f	class:AcaoCriarAtributo	signature:()
AcaoCriarAtributo::fazerAcao	acoes/acao_criar_atributo.h	/^    virtual void fazerAcao();$/;"	p	class:AcaoCriarAtributo	access:public	signature:()
AcaoCriarAtributo::podeDesfazer	acoes/acao_criar_atributo.h	/^    virtual bool podeDesfazer() { return true; }$/;"	f	class:AcaoCriarAtributo	access:public	signature:()
AcaoCriarAtributo::posicao	acoes/acao_criar_atributo.h	/^    QPointF posicao;$/;"	m	class:AcaoCriarAtributo	access:private
AcaoCriarAtributo::scene	acoes/acao_criar_atributo.h	/^    QGraphicsScene * scene;$/;"	m	class:AcaoCriarAtributo	access:private
AcaoCriarLigacao	acoes/acao_criar_ligacao.cpp	/^AcaoCriarLigacao::AcaoCriarLigacao(QGraphicsScene * scene, QGraphicsItem * item1, QGraphicsItem * item2)$/;"	f	class:AcaoCriarLigacao	signature:(QGraphicsScene * scene, QGraphicsItem * item1, QGraphicsItem * item2)
AcaoCriarLigacao	acoes/acao_criar_ligacao.h	/^    AcaoCriarLigacao(QGraphicsScene * scene, QGraphicsItem * item1, QGraphicsItem * item2);$/;"	p	class:AcaoCriarLigacao	access:public	signature:(QGraphicsScene * scene, QGraphicsItem * item1, QGraphicsItem * item2)
AcaoCriarLigacao	acoes/acao_criar_ligacao.h	/^class AcaoCriarLigacao : public Acao$/;"	c	inherits:Acao
AcaoCriarLigacao::AcaoCriarLigacao	acoes/acao_criar_ligacao.cpp	/^AcaoCriarLigacao::AcaoCriarLigacao(QGraphicsScene * scene, QGraphicsItem * item1, QGraphicsItem * item2)$/;"	f	class:AcaoCriarLigacao	signature:(QGraphicsScene * scene, QGraphicsItem * item1, QGraphicsItem * item2)
AcaoCriarLigacao::AcaoCriarLigacao	acoes/acao_criar_ligacao.h	/^    AcaoCriarLigacao(QGraphicsScene * scene, QGraphicsItem * item1, QGraphicsItem * item2);$/;"	p	class:AcaoCriarLigacao	access:public	signature:(QGraphicsScene * scene, QGraphicsItem * item1, QGraphicsItem * item2)
AcaoCriarLigacao::cardinalidade	acoes/acao_criar_ligacao.h	/^    Cardinalidade * cardinalidade;$/;"	m	class:AcaoCriarLigacao	access:private
AcaoCriarLigacao::cast1P	acoes/acao_criar_ligacao.h	/^    Poligono *cast1P, *cast2P;$/;"	m	class:AcaoCriarLigacao	access:private
AcaoCriarLigacao::cast2P	acoes/acao_criar_ligacao.h	/^    Poligono *cast1P, *cast2P;$/;"	m	class:AcaoCriarLigacao	access:private
AcaoCriarLigacao::desfazerAcao	acoes/acao_criar_ligacao.cpp	/^void AcaoCriarLigacao::desfazerAcao()$/;"	f	class:AcaoCriarLigacao	signature:()
AcaoCriarLigacao::desfazerAcao	acoes/acao_criar_ligacao.h	/^    virtual void desfazerAcao();$/;"	p	class:AcaoCriarLigacao	access:public	signature:()
AcaoCriarLigacao::fazerAcao	acoes/acao_criar_ligacao.cpp	/^void AcaoCriarLigacao::fazerAcao()$/;"	f	class:AcaoCriarLigacao	signature:()
AcaoCriarLigacao::fazerAcao	acoes/acao_criar_ligacao.h	/^    virtual void fazerAcao();$/;"	p	class:AcaoCriarLigacao	access:public	signature:()
AcaoCriarLigacao::getLigacao	acoes/acao_criar_ligacao.h	/^    Ligacao *getLigacao() { return this->ligacao; }$/;"	f	class:AcaoCriarLigacao	access:public	signature:()
AcaoCriarLigacao::item1	acoes/acao_criar_ligacao.h	/^    QGraphicsItem * item1, * item2;$/;"	m	class:AcaoCriarLigacao	access:private
AcaoCriarLigacao::item2	acoes/acao_criar_ligacao.h	/^    QGraphicsItem * item1, * item2;$/;"	m	class:AcaoCriarLigacao	access:private
AcaoCriarLigacao::ligacao	acoes/acao_criar_ligacao.h	/^    Ligacao * ligacao;$/;"	m	class:AcaoCriarLigacao	access:private
AcaoCriarLigacao::nomeLigacao1	acoes/acao_criar_ligacao.h	/^    Texto * nomeLigacao1, * nomeLigacao2;$/;"	m	class:AcaoCriarLigacao	access:private
AcaoCriarLigacao::nomeLigacao2	acoes/acao_criar_ligacao.h	/^    Texto * nomeLigacao1, * nomeLigacao2;$/;"	m	class:AcaoCriarLigacao	access:private
AcaoCriarLigacao::podeDesfazer	acoes/acao_criar_ligacao.h	/^    virtual bool podeDesfazer() { return true; }$/;"	f	class:AcaoCriarLigacao	access:public	signature:()
AcaoCriarLigacao::scene	acoes/acao_criar_ligacao.h	/^    QGraphicsScene * scene;$/;"	m	class:AcaoCriarLigacao	access:private
AcaoCriarPoligono	acoes/acao_criar_poligono.cpp	/^AcaoCriarPoligono::AcaoCriarPoligono(QGraphicsScene * scene, Poligono::Tipo tipo, QString nome, QPointF posicao)$/;"	f	class:AcaoCriarPoligono	signature:(QGraphicsScene * scene, Poligono::Tipo tipo, QString nome, QPointF posicao)
AcaoCriarPoligono	acoes/acao_criar_poligono.h	/^    AcaoCriarPoligono(QGraphicsScene * scene, Poligono::Tipo tipo, QString nome, QPointF posicao);$/;"	p	class:AcaoCriarPoligono	access:public	signature:(QGraphicsScene * scene, Poligono::Tipo tipo, QString nome, QPointF posicao)
AcaoCriarPoligono	acoes/acao_criar_poligono.h	/^class AcaoCriarPoligono : public Acao$/;"	c	inherits:Acao
AcaoCriarPoligono::AcaoCriarPoligono	acoes/acao_criar_poligono.cpp	/^AcaoCriarPoligono::AcaoCriarPoligono(QGraphicsScene * scene, Poligono::Tipo tipo, QString nome, QPointF posicao)$/;"	f	class:AcaoCriarPoligono	signature:(QGraphicsScene * scene, Poligono::Tipo tipo, QString nome, QPointF posicao)
AcaoCriarPoligono::AcaoCriarPoligono	acoes/acao_criar_poligono.h	/^    AcaoCriarPoligono(QGraphicsScene * scene, Poligono::Tipo tipo, QString nome, QPointF posicao);$/;"	p	class:AcaoCriarPoligono	access:public	signature:(QGraphicsScene * scene, Poligono::Tipo tipo, QString nome, QPointF posicao)
AcaoCriarPoligono::childPol	acoes/acao_criar_poligono.h	/^    Poligono * childPol;$/;"	m	class:AcaoCriarPoligono	access:private
AcaoCriarPoligono::desfazerAcao	acoes/acao_criar_poligono.cpp	/^void AcaoCriarPoligono::desfazerAcao()$/;"	f	class:AcaoCriarPoligono	signature:()
AcaoCriarPoligono::desfazerAcao	acoes/acao_criar_poligono.h	/^    virtual void desfazerAcao();$/;"	p	class:AcaoCriarPoligono	access:public	signature:()
AcaoCriarPoligono::fazerAcao	acoes/acao_criar_poligono.cpp	/^void AcaoCriarPoligono::fazerAcao()$/;"	f	class:AcaoCriarPoligono	signature:()
AcaoCriarPoligono::fazerAcao	acoes/acao_criar_poligono.h	/^    virtual void fazerAcao();$/;"	p	class:AcaoCriarPoligono	access:public	signature:()
AcaoCriarPoligono::getPoligono	acoes/acao_criar_poligono.h	/^    Poligono * getPoligono() { return this->mainPol; }$/;"	f	class:AcaoCriarPoligono	access:public	signature:()
AcaoCriarPoligono::mainPol	acoes/acao_criar_poligono.h	/^    Poligono * mainPol;$/;"	m	class:AcaoCriarPoligono	access:private
AcaoCriarPoligono::podeDesfazer	acoes/acao_criar_poligono.h	/^    virtual bool podeDesfazer() { return true; }$/;"	f	class:AcaoCriarPoligono	access:public	signature:()
AcaoCriarPoligono::posicao	acoes/acao_criar_poligono.h	/^    QPointF posicao;$/;"	m	class:AcaoCriarPoligono	access:private
AcaoCriarPoligono::scene	acoes/acao_criar_poligono.h	/^    QGraphicsScene * scene;$/;"	m	class:AcaoCriarPoligono	access:private
AcaoMover	acoes/acao_mover.cpp	/^AcaoMover::AcaoMover(QList<QGraphicsItem *> selecionados, QPointF deslocamento)$/;"	f	class:AcaoMover	signature:(QList<QGraphicsItem *> selecionados, QPointF deslocamento)
AcaoMover	acoes/acao_mover.h	/^    AcaoMover(QList<QGraphicsItem *> selecionados, QPointF deslocamento);$/;"	p	class:AcaoMover	access:public	signature:(QList<QGraphicsItem *> selecionados, QPointF deslocamento)
AcaoMover	acoes/acao_mover.h	/^class AcaoMover : public Acao$/;"	c	inherits:Acao
AcaoMover::AcaoMover	acoes/acao_mover.cpp	/^AcaoMover::AcaoMover(QList<QGraphicsItem *> selecionados, QPointF deslocamento)$/;"	f	class:AcaoMover	signature:(QList<QGraphicsItem *> selecionados, QPointF deslocamento)
AcaoMover::AcaoMover	acoes/acao_mover.h	/^    AcaoMover(QList<QGraphicsItem *> selecionados, QPointF deslocamento);$/;"	p	class:AcaoMover	access:public	signature:(QList<QGraphicsItem *> selecionados, QPointF deslocamento)
AcaoMover::_deslocamento	acoes/acao_mover.h	/^    QPointF _deslocamento;$/;"	m	class:AcaoMover	access:private
AcaoMover::_items	acoes/acao_mover.h	/^    QList<QGraphicsItem *> _items;$/;"	m	class:AcaoMover	access:private
AcaoMover::desfazerAcao	acoes/acao_mover.cpp	/^void AcaoMover::desfazerAcao()$/;"	f	class:AcaoMover	signature:()
AcaoMover::desfazerAcao	acoes/acao_mover.h	/^    virtual void desfazerAcao();$/;"	p	class:AcaoMover	access:public	signature:()
AcaoMover::fazerAcao	acoes/acao_mover.cpp	/^void AcaoMover::fazerAcao()$/;"	f	class:AcaoMover	signature:()
AcaoMover::fazerAcao	acoes/acao_mover.h	/^    virtual void fazerAcao();$/;"	p	class:AcaoMover	access:public	signature:()
AcaoMover::podeDesfazer	acoes/acao_mover.h	/^    virtual bool podeDesfazer() { return true; }$/;"	f	class:AcaoMover	access:public	signature:()
AcoesPilha	acoespilha.cpp	/^AcoesPilha::AcoesPilha() : posAtual(-1)$/;"	f	class:AcoesPilha	signature:()
AcoesPilha	acoespilha.h	/^    AcoesPilha();$/;"	p	class:AcoesPilha	access:private	signature:()
AcoesPilha	acoespilha.h	/^    AcoesPilha(AcoesPilha const&);     \/\/ Nao implementar$/;"	p	class:AcoesPilha	access:private	signature:(AcoesPilha const&)
AcoesPilha	acoespilha.h	/^class AcoesPilha$/;"	c
AcoesPilha::AcoesPilha	acoespilha.cpp	/^AcoesPilha::AcoesPilha() : posAtual(-1)$/;"	f	class:AcoesPilha	signature:()
AcoesPilha::AcoesPilha	acoespilha.h	/^    AcoesPilha();$/;"	p	class:AcoesPilha	access:private	signature:()
AcoesPilha::AcoesPilha	acoespilha.h	/^    AcoesPilha(AcoesPilha const&);     \/\/ Nao implementar$/;"	p	class:AcoesPilha	access:private	signature:(AcoesPilha const&)
AcoesPilha::addAcao	acoespilha.cpp	/^void AcoesPilha::addAcao(Acao *acao)$/;"	f	class:AcoesPilha	signature:(Acao *acao)
AcoesPilha::addAcao	acoespilha.h	/^    void addAcao(Acao * command);$/;"	p	class:AcoesPilha	access:public	signature:(Acao * command)
AcoesPilha::desfazer	acoespilha.cpp	/^bool AcoesPilha::desfazer()$/;"	f	class:AcoesPilha	signature:()
AcoesPilha::desfazer	acoespilha.h	/^    bool desfazer();$/;"	p	class:AcoesPilha	access:public	signature:()
AcoesPilha::getTopCommand	acoespilha.cpp	/^Acao * AcoesPilha::getTopCommand()$/;"	f	class:AcoesPilha	signature:()
AcoesPilha::getTopCommand	acoespilha.h	/^    Acao * getTopCommand();$/;"	p	class:AcoesPilha	access:public	signature:()
AcoesPilha::instanciaUnica	acoespilha.h	/^    static AcoesPilha * instanciaUnica()$/;"	f	class:AcoesPilha	access:public	signature:()
AcoesPilha::operator =	acoespilha.h	/^    void operator=(AcoesPilha const&); \/\/ Nao implementar$/;"	p	class:AcoesPilha	access:private	signature:(AcoesPilha const&)
AcoesPilha::pilhaDeAcoes	acoespilha.h	/^    QList<Acao *> pilhaDeAcoes;$/;"	m	class:AcoesPilha	access:private
AcoesPilha::posAtual	acoespilha.h	/^    int posAtual;$/;"	m	class:AcoesPilha	access:private
AcoesPilha::refazer	acoespilha.cpp	/^bool AcoesPilha::refazer()$/;"	f	class:AcoesPilha	signature:()
AcoesPilha::refazer	acoespilha.h	/^    bool refazer();$/;"	p	class:AcoesPilha	access:public	signature:()
Atributo	atributo.cpp	/^Atributo::Atributo( Tipo tipo, QGraphicsItem *parent, QGraphicsScene *scene ) : QGraphicsEllipseItem( parent, scene )$/;"	f	class:Atributo	signature:( Tipo tipo, QGraphicsItem *parent, QGraphicsScene *scene )
Atributo	atributo.h	/^    Atributo(Tipo tipo, QGraphicsItem *parent = 0, QGraphicsScene *scene = 0);$/;"	p	class:Atributo	access:public	signature:(Tipo tipo, QGraphicsItem *parent = 0, QGraphicsScene *scene = 0)
Atributo	atributo.h	/^class Atributo : public QObject, public QGraphicsEllipseItem$/;"	c	inherits:QObject,QGraphicsEllipseItem
Atributo::Atributo	atributo.cpp	/^Atributo::Atributo( Tipo tipo, QGraphicsItem *parent, QGraphicsScene *scene ) : QGraphicsEllipseItem( parent, scene )$/;"	f	class:Atributo	signature:( Tipo tipo, QGraphicsItem *parent, QGraphicsScene *scene )
Atributo::Atributo	atributo.h	/^    Atributo(Tipo tipo, QGraphicsItem *parent = 0, QGraphicsScene *scene = 0);$/;"	p	class:Atributo	access:public	signature:(Tipo tipo, QGraphicsItem *parent = 0, QGraphicsScene *scene = 0)
Atributo::RemoveTodasEntidadesAssociadas	atributo.h	/^    void RemoveTodasEntidadesAssociadas() { this->entidades_associadas.erase(this->entidades_associadas.begin(), this->entidades_associadas.end()); }$/;"	f	class:Atributo	access:public	signature:()
Atributo::RemoveTodasEntidadesAssociativasAssociadas	atributo.h	/^    void RemoveTodasEntidadesAssociativasAssociadas() { this->entidades_associativas_associadas.erase(this->entidades_associativas_associadas.begin(), this->entidades_associativas_associadas.end()); }$/;"	f	class:Atributo	access:public	signature:()
Atributo::RemoveTodasLinhasAssociadas	atributo.h	/^    void RemoveTodasLinhasAssociadas() { this->linhaAssociada.erase(this->linhaAssociada.begin(), this->linhaAssociada.end()); }$/;"	f	class:Atributo	access:public	signature:()
Atributo::RemoveTodosRelacionamentosAssociados	atributo.h	/^    void RemoveTodosRelacionamentosAssociados() { this->relacionamentos_associados.erase(this->relacionamentos_associados.begin(), this->relacionamentos_associados.end()); }$/;"	f	class:Atributo	access:public	signature:()
Atributo::Tipo	atributo.h	/^    enum Tipo { atributo, atributo_identif };$/;"	g	class:Atributo	access:public
Atributo::Type	atributo.h	/^    enum { Type = UserType + 3 };$/;"	e	enum:Atributo::__anon2
Atributo::atributo	atributo.h	/^    enum Tipo { atributo, atributo_identif };$/;"	e	enum:Atributo::Tipo
Atributo::atributo_identif	atributo.h	/^    enum Tipo { atributo, atributo_identif };$/;"	e	enum:Atributo::Tipo
Atributo::circ	atributo.h	/^    QRectF *circ;$/;"	m	class:Atributo	access:private
Atributo::conectado	atributo.h	/^    bool conectado;$/;"	m	class:Atributo	access:private
Atributo::entidades_associadas	atributo.h	/^    QList< Poligono * > entidades_associadas;$/;"	m	class:Atributo	access:private
Atributo::entidades_associativas_associadas	atributo.h	/^    QList < Poligono *> entidades_associativas_associadas;$/;"	m	class:Atributo	access:private
Atributo::getConectado	atributo.h	/^    bool getConectado() { return conectado; }$/;"	f	class:Atributo	access:public	signature:()
Atributo::getEntidades_Associadas	atributo.h	/^    QList< Poligono *> getEntidades_Associadas() { return entidades_associadas; }$/;"	f	class:Atributo	access:public	signature:()
Atributo::getEntidades_Associativas_Associadas	atributo.h	/^    QList< Poligono *> getEntidades_Associativas_Associadas() { return entidades_associativas_associadas; }$/;"	f	class:Atributo	access:public	signature:()
Atributo::getLinhaAssociada	atributo.h	/^    QList< QGraphicsLineItem *> getLinhaAssociada() { return linhaAssociada; }$/;"	f	class:Atributo	access:public	signature:()
Atributo::getRelacionamentos_Associados	atributo.h	/^    QList< Poligono *> getRelacionamentos_Associados() { return relacionamentos_associados; }$/;"	f	class:Atributo	access:public	signature:()
Atributo::getTipo	atributo.h	/^    Tipo getTipo() { return tipo; }$/;"	f	class:Atributo	access:public	signature:()
Atributo::itemChange	atributo.cpp	/^QVariant Atributo::itemChange(GraphicsItemChange change, const QVariant &value)$/;"	f	class:Atributo	signature:(GraphicsItemChange change, const QVariant &value)
Atributo::itemChange	atributo.h	/^    QVariant itemChange(GraphicsItemChange change, const QVariant &value);$/;"	p	class:Atributo	access:protected	signature:(GraphicsItemChange change, const QVariant &value)
Atributo::linhaAssociada	atributo.h	/^    QList< QGraphicsLineItem * > linhaAssociada;$/;"	m	class:Atributo	access:private
Atributo::paint	atributo.cpp	/^void Atributo::paint(QPainter *painter, const QStyleOptionGraphicsItem *option, QWidget *widget)$/;"	f	class:Atributo	signature:(QPainter *painter, const QStyleOptionGraphicsItem *option, QWidget *widget)
Atributo::paint	atributo.h	/^    void paint(QPainter *painter, const QStyleOptionGraphicsItem *option, QWidget *widget);$/;"	p	class:Atributo	access:public	signature:(QPainter *painter, const QStyleOptionGraphicsItem *option, QWidget *widget)
Atributo::posicaoAlterada	atributo.h	/^    void posicaoAlterada();$/;"	p	class:Atributo	access:protected	signature:()
Atributo::relacionamentos_associados	atributo.h	/^    QList< Poligono * > relacionamentos_associados;$/;"	m	class:Atributo	access:private
Atributo::setConectado	atributo.h	/^    void setConectado( bool c ) { this->conectado = c; }$/;"	f	class:Atributo	access:public	signature:( bool c )
Atributo::setEntidades_Associadas	atributo.h	/^    void setEntidades_Associadas( Poligono *ea ) { this->entidades_associadas.push_back(ea); }$/;"	f	class:Atributo	access:public	signature:( Poligono *ea )
Atributo::setEntidades_Associativas_Associadas	atributo.h	/^    void setEntidades_Associativas_Associadas( Poligono *eaa ) { this->entidades_associativas_associadas.push_back(eaa); }$/;"	f	class:Atributo	access:public	signature:( Poligono *eaa )
Atributo::setLinhaAssociada	atributo.h	/^    void setLinhaAssociada( QGraphicsLineItem *la ) { this->linhaAssociada.push_back(la); }$/;"	f	class:Atributo	access:public	signature:( QGraphicsLineItem *la )
Atributo::setRelacionamentos_Associados	atributo.h	/^    void setRelacionamentos_Associados( Poligono *ra ) { this->relacionamentos_associados.push_back(ra); }$/;"	f	class:Atributo	access:public	signature:( Poligono *ra )
Atributo::setTipo	atributo.h	/^    void setTipo(Tipo tipo) { this->tipo = tipo; }$/;"	f	class:Atributo	access:public	signature:(Tipo tipo)
Atributo::tipo	atributo.h	/^    Tipo tipo;$/;"	m	class:Atributo	access:private
Atributo::type	atributo.h	/^    int type() const$/;"	f	class:Atributo	access:public	signature:() const
CARDINALIDADE_H	cardinalidade.h	4;"	d
Cardinalidade	cardinalidade.cpp	/^Cardinalidade::Cardinalidade(Poligono *item1, Poligono *item2, Ligacao *linha, QGraphicsItem *parent) : QGraphicsTextItem(parent)$/;"	f	class:Cardinalidade	signature:(Poligono *item1, Poligono *item2, Ligacao *linha, QGraphicsItem *parent)
Cardinalidade	cardinalidade.h	/^    Cardinalidade(Poligono *item1, Poligono *item2, Ligacao *linha, QGraphicsItem *parent = 0);$/;"	p	class:Cardinalidade	access:public	signature:(Poligono *item1, Poligono *item2, Ligacao *linha, QGraphicsItem *parent = 0)
Cardinalidade	cardinalidade.h	/^class Cardinalidade : public QGraphicsTextItem$/;"	c	inherits:QGraphicsTextItem
Cardinalidade::Cardinalidade	cardinalidade.cpp	/^Cardinalidade::Cardinalidade(Poligono *item1, Poligono *item2, Ligacao *linha, QGraphicsItem *parent) : QGraphicsTextItem(parent)$/;"	f	class:Cardinalidade	signature:(Poligono *item1, Poligono *item2, Ligacao *linha, QGraphicsItem *parent)
Cardinalidade::Cardinalidade	cardinalidade.h	/^    Cardinalidade(Poligono *item1, Poligono *item2, Ligacao *linha, QGraphicsItem *parent = 0);$/;"	p	class:Cardinalidade	access:public	signature:(Poligono *item1, Poligono *item2, Ligacao *linha, QGraphicsItem *parent = 0)
Cardinalidade::RemoveTodasEntidadesAssociadas	cardinalidade.h	/^    void RemoveTodasEntidadesAssociadas() { this->entidades_associadas.erase(this->entidades_associadas.begin(), this->entidades_associadas.end()); }$/;"	f	class:Cardinalidade	access:public	signature:()
Cardinalidade::RemoveTodasEntidadesAssociativasAssociadas	cardinalidade.h	/^    void RemoveTodasEntidadesAssociativasAssociadas() { this->entidades_associativas_associadas.erase(this->entidades_associativas_associadas.begin(), this->entidades_associativas_associadas.end()); }$/;"	f	class:Cardinalidade	access:public	signature:()
Cardinalidade::RemoveTodosRelacionamentosAssociados	cardinalidade.h	/^    void RemoveTodosRelacionamentosAssociados() { this->relacionamentos_associados.erase(this->relacionamentos_associados.begin(), this->relacionamentos_associados.end()); }$/;"	f	class:Cardinalidade	access:public	signature:()
Cardinalidade::Remove_Entidade_Associada	cardinalidade.h	/^    void Remove_Entidade_Associada( int index ) { this->entidades_associadas.removeAt(index); }$/;"	f	class:Cardinalidade	access:public	signature:( int index )
Cardinalidade::Remove_Entidade_Associativa_Associada	cardinalidade.h	/^    void Remove_Entidade_Associativa_Associada( int index ) { this->entidades_associativas_associadas.removeAt(index); }$/;"	f	class:Cardinalidade	access:public	signature:( int index )
Cardinalidade::Remove_Relacionamento_Associado	cardinalidade.h	/^    void Remove_Relacionamento_Associado( int index ) { this->relacionamentos_associados.removeAt(index); }$/;"	f	class:Cardinalidade	access:public	signature:( int index )
Cardinalidade::atualCardinalidade	cardinalidade.h	/^    QString atualCardinalidade;$/;"	m	class:Cardinalidade	access:private
Cardinalidade::atualizaPos	cardinalidade.cpp	/^void Cardinalidade::atualizaPos()$/;"	f	class:Cardinalidade	signature:()
Cardinalidade::atualizaPos	cardinalidade.h	/^    void atualizaPos();$/;"	p	class:Cardinalidade	access:public	signature:()
Cardinalidade::chamarTelaCardinalidade	cardinalidade.h	/^    Dialog chamarTelaCardinalidade;$/;"	m	class:Cardinalidade	access:private
Cardinalidade::entidades_associadas	cardinalidade.h	/^    QList< Poligono * > entidades_associadas;$/;"	m	class:Cardinalidade	access:private
Cardinalidade::entidades_associativas_associadas	cardinalidade.h	/^    QList< Poligono * > entidades_associativas_associadas;$/;"	m	class:Cardinalidade	access:private
Cardinalidade::getAtualCardinalidade	cardinalidade.h	/^    QString getAtualCardinalidade() { return this->atualCardinalidade; }$/;"	f	class:Cardinalidade	access:public	signature:()
Cardinalidade::getEntidades_Associadas	cardinalidade.h	/^    QList< Poligono *> getEntidades_Associadas() { return entidades_associadas; }$/;"	f	class:Cardinalidade	access:public	signature:()
Cardinalidade::getEntidades_Associativas_Associadas	cardinalidade.h	/^    QList< Poligono *> getEntidades_Associativas_Associadas() { return entidades_associativas_associadas; }$/;"	f	class:Cardinalidade	access:public	signature:()
Cardinalidade::getRelacionamentos_Associados	cardinalidade.h	/^    QList< Poligono *> getRelacionamentos_Associados() { return relacionamentos_associados; }$/;"	f	class:Cardinalidade	access:public	signature:()
Cardinalidade::itemA	cardinalidade.h	/^    Poligono *itemA;$/;"	m	class:Cardinalidade	access:private
Cardinalidade::itemB	cardinalidade.h	/^    Poligono *itemB;$/;"	m	class:Cardinalidade	access:private
Cardinalidade::linha_atual	cardinalidade.h	/^    Ligacao *linha_atual;$/;"	m	class:Cardinalidade	access:private
Cardinalidade::mouseReleaseEvent	cardinalidade.cpp	/^void Cardinalidade::mouseReleaseEvent(QGraphicsSceneMouseEvent *event)$/;"	f	class:Cardinalidade	signature:(QGraphicsSceneMouseEvent *event)
Cardinalidade::mouseReleaseEvent	cardinalidade.h	/^    void mouseReleaseEvent(QGraphicsSceneMouseEvent *event);$/;"	p	class:Cardinalidade	access:protected	signature:(QGraphicsSceneMouseEvent *event)
Cardinalidade::relacionamentos_associados	cardinalidade.h	/^    QList< Poligono * > relacionamentos_associados;$/;"	m	class:Cardinalidade	access:private
Cardinalidade::setAtualCardinalidade	cardinalidade.h	/^    void setAtualCardinalidade( QString c ) { this->atualCardinalidade = c; }$/;"	f	class:Cardinalidade	access:public	signature:( QString c )
Cardinalidade::setEntidades_Associadas	cardinalidade.h	/^    void setEntidades_Associadas( Poligono *ea ) { this->entidades_associadas.push_back(ea); }$/;"	f	class:Cardinalidade	access:public	signature:( Poligono *ea )
Cardinalidade::setEntidades_Associativas_Associadas	cardinalidade.h	/^    void setEntidades_Associativas_Associadas( Poligono *eaa ) { this->entidades_associativas_associadas.push_back(eaa); }$/;"	f	class:Cardinalidade	access:public	signature:( Poligono *eaa )
Cardinalidade::setItemA	cardinalidade.h	/^    void setItemA ( Poligono *item ) { this->itemA = item; }$/;"	f	class:Cardinalidade	access:public	signature:( Poligono *item )
Cardinalidade::setItemB	cardinalidade.h	/^    void setItemB ( Poligono *item ) { this->itemB = item; }$/;"	f	class:Cardinalidade	access:public	signature:( Poligono *item )
Cardinalidade::setLinha_Atual	cardinalidade.h	/^    void setLinha_Atual ( Ligacao *linha ) { this->linha_atual = linha; }$/;"	f	class:Cardinalidade	access:public	signature:( Ligacao *linha )
Cardinalidade::setRelacionamento_Associados	cardinalidade.h	/^    void setRelacionamento_Associados( Poligono *ra ) { this->relacionamentos_associados.push_back(ra); }$/;"	f	class:Cardinalidade	access:public	signature:( Poligono *ra )
DIAGRAMAVIEW_H	diagramaview.h	5;"	d
DIALOG_H	dialog.h	5;"	d
DSCENE_H	diagrama.h	5;"	d
Diagrama	diagrama.cpp	/^Diagrama::Diagrama( QObject *parent ) : QGraphicsScene(parent)$/;"	f	class:Diagrama	signature:( QObject *parent )
Diagrama	diagrama.h	/^    Diagrama(QObject *parent = 0);$/;"	p	class:Diagrama	access:public	signature:(QObject *parent = 0)
Diagrama	diagrama.h	/^class Diagrama : public QGraphicsScene$/;"	c	inherits:QGraphicsScene
Diagrama::Diagrama	diagrama.cpp	/^Diagrama::Diagrama( QObject *parent ) : QGraphicsScene(parent)$/;"	f	class:Diagrama	signature:( QObject *parent )
Diagrama::Diagrama	diagrama.h	/^    Diagrama(QObject *parent = 0);$/;"	p	class:Diagrama	access:public	signature:(QObject *parent = 0)
Diagrama::Lselecionar	diagrama.h	/^    QGraphicsLineItem *Lselecionar;$/;"	m	class:Diagrama	access:private
Diagrama::Rselecionar	diagrama.h	/^    QGraphicsRectItem *Rselecionar;$/;"	m	class:Diagrama	access:private
Diagrama::TipoER	diagrama.h	/^    enum TipoER { entidade, relacionamento, gen_esp, ent_associativa, atributo, atributo_ident, linha, mouse };$/;"	g	class:Diagrama	access:public
Diagrama::ativaMover	diagrama.h	/^    bool ativaMover;$/;"	m	class:Diagrama	access:private
Diagrama::ativaSelecao	diagrama.h	/^    bool ativaSelecao;$/;"	m	class:Diagrama	access:private
Diagrama::atr	diagrama.h	/^    Atributo *atr;$/;"	m	class:Diagrama	access:private
Diagrama::atributo	diagrama.h	/^    enum TipoER { entidade, relacionamento, gen_esp, ent_associativa, atributo, atributo_ident, linha, mouse };$/;"	e	enum:Diagrama::TipoER
Diagrama::atributo_ident	diagrama.h	/^    enum TipoER { entidade, relacionamento, gen_esp, ent_associativa, atributo, atributo_ident, linha, mouse };$/;"	e	enum:Diagrama::TipoER
Diagrama::card	diagrama.h	/^    Texto *card;$/;"	m	class:Diagrama	access:private
Diagrama::cast1P	diagrama.h	/^    Poligono *cast1P;$/;"	m	class:Diagrama	access:private
Diagrama::cast2P	diagrama.h	/^    Poligono *cast2P;$/;"	m	class:Diagrama	access:private
Diagrama::castA	diagrama.h	/^    Atributo *castA;$/;"	m	class:Diagrama	access:private
Diagrama::cast_linha	diagrama.h	/^    Ligacao *cast_linha;$/;"	m	class:Diagrama	access:private
Diagrama::countAtributo	diagrama.h	/^    int countAtributo;$/;"	m	class:Diagrama	access:private
Diagrama::countAtributoIdentificador	diagrama.h	/^    int countAtributoIdentificador;$/;"	m	class:Diagrama	access:private
Diagrama::countEntidade	diagrama.h	/^    int countEntidade;$/;"	m	class:Diagrama	access:private
Diagrama::countEntidadeAssociativa	diagrama.h	/^    int countEntidadeAssociativa;$/;"	m	class:Diagrama	access:private
Diagrama::countRelacionamento	diagrama.h	/^    int countRelacionamento;$/;"	m	class:Diagrama	access:private
Diagrama::desfazerItem	diagrama.h	/^    QStack<QGraphicsItem*> desfazerItem;$/;"	m	class:Diagrama	access:private
Diagrama::ent_associativa	diagrama.h	/^    enum TipoER { entidade, relacionamento, gen_esp, ent_associativa, atributo, atributo_ident, linha, mouse };$/;"	e	enum:Diagrama::TipoER
Diagrama::entidade	diagrama.h	/^    enum TipoER { entidade, relacionamento, gen_esp, ent_associativa, atributo, atributo_ident, linha, mouse };$/;"	e	enum:Diagrama::TipoER
Diagrama::gen_esp	diagrama.h	/^    enum TipoER { entidade, relacionamento, gen_esp, ent_associativa, atributo, atributo_ident, linha, mouse };$/;"	e	enum:Diagrama::TipoER
Diagrama::getDesfazerItem	diagrama.h	/^    QStack<QGraphicsItem*> getDesfazerItem() { return this->desfazerItem; }$/;"	f	class:Diagrama	access:public	signature:()
Diagrama::getTipoER	diagrama.h	/^    TipoER getTipoER() { return tipoER; }$/;"	f	class:Diagrama	access:public	signature:()
Diagrama::insereCardinalidade	diagrama.h	/^    Cardinalidade *insereCardinalidade;$/;"	m	class:Diagrama	access:private
Diagrama::item1	diagrama.h	/^    QGraphicsItem *item1;$/;"	m	class:Diagrama	access:private
Diagrama::item2	diagrama.h	/^    QGraphicsItem *item2;$/;"	m	class:Diagrama	access:private
Diagrama::itemInserido	diagrama.h	/^    void itemInserido();$/;"	p	class:Diagrama	access:public	signature:()
Diagrama::lig	diagrama.h	/^    Ligacao *lig;$/;"	m	class:Diagrama	access:private
Diagrama::linha	diagrama.h	/^    enum TipoER { entidade, relacionamento, gen_esp, ent_associativa, atributo, atributo_ident, linha, mouse };$/;"	e	enum:Diagrama::TipoER
Diagrama::mouse	diagrama.h	/^    enum TipoER { entidade, relacionamento, gen_esp, ent_associativa, atributo, atributo_ident, linha, mouse };$/;"	e	enum:Diagrama::TipoER
Diagrama::mouseMoveEvent	diagrama.cpp	/^void Diagrama::mouseMoveEvent(QGraphicsSceneMouseEvent *event)$/;"	f	class:Diagrama	signature:(QGraphicsSceneMouseEvent *event)
Diagrama::mouseMoveEvent	diagrama.h	/^    void mouseMoveEvent(QGraphicsSceneMouseEvent *event);$/;"	p	class:Diagrama	access:protected	signature:(QGraphicsSceneMouseEvent *event)
Diagrama::mousePressEvent	diagrama.cpp	/^void Diagrama::mousePressEvent(QGraphicsSceneMouseEvent *event)$/;"	f	class:Diagrama	signature:(QGraphicsSceneMouseEvent *event)
Diagrama::mousePressEvent	diagrama.h	/^    void mousePressEvent(QGraphicsSceneMouseEvent *event);$/;"	p	class:Diagrama	access:protected	signature:(QGraphicsSceneMouseEvent *event)
Diagrama::mouseReleaseEvent	diagrama.cpp	/^void Diagrama::mouseReleaseEvent(QGraphicsSceneMouseEvent *event)$/;"	f	class:Diagrama	signature:(QGraphicsSceneMouseEvent *event)
Diagrama::mouseReleaseEvent	diagrama.h	/^    void mouseReleaseEvent(QGraphicsSceneMouseEvent *event);$/;"	p	class:Diagrama	access:protected	signature:(QGraphicsSceneMouseEvent *event)
Diagrama::nomeAtributo	diagrama.h	/^    Texto *nomeAtributo;$/;"	m	class:Diagrama	access:private
Diagrama::nomeAtributoIdentificador	diagrama.h	/^    Texto *nomeAtributoIdentificador;$/;"	m	class:Diagrama	access:private
Diagrama::nomeEntidade	diagrama.h	/^    Texto *nomeEntidade;$/;"	m	class:Diagrama	access:private
Diagrama::nomeEntidadeAssociativa	diagrama.h	/^    Texto *nomeEntidadeAssociativa;$/;"	m	class:Diagrama	access:private
Diagrama::nomeLigacao1	diagrama.h	/^    Texto *nomeLigacao1;$/;"	m	class:Diagrama	access:private
Diagrama::nomeLigacao2	diagrama.h	/^    Texto *nomeLigacao2;$/;"	m	class:Diagrama	access:private
Diagrama::nomeRelacionamento	diagrama.h	/^    Texto *nomeRelacionamento;$/;"	m	class:Diagrama	access:private
Diagrama::novaLinha	diagrama.h	/^    QGraphicsLineItem *novaLinha;$/;"	m	class:Diagrama	access:private
Diagrama::pilhaDeAcoes	diagrama.h	/^    AcoesPilha * pilhaDeAcoes;$/;"	m	class:Diagrama	access:private
Diagrama::poli	diagrama.h	/^    Poligono *poli;$/;"	m	class:Diagrama	access:private
Diagrama::poli2	diagrama.h	/^    Poligono *poli2;$/;"	m	class:Diagrama	access:private
Diagrama::pontoInicial	diagrama.h	/^    QPointF pontoInicial;$/;"	m	class:Diagrama	access:private
Diagrama::popDesfazerItem	diagrama.h	/^    void popDesfazerItem() { this->desfazerItem.pop(); }$/;"	f	class:Diagrama	access:public	signature:()
Diagrama::popRefazerItem	diagrama.h	/^    void popRefazerItem() { this->refazerItem.pop(); }$/;"	f	class:Diagrama	access:public	signature:()
Diagrama::refazerItem	diagrama.h	/^    QStack<QGraphicsItem*> refazerItem;$/;"	m	class:Diagrama	access:private
Diagrama::relacionamento	diagrama.h	/^    enum TipoER { entidade, relacionamento, gen_esp, ent_associativa, atributo, atributo_ident, linha, mouse };$/;"	e	enum:Diagrama::TipoER
Diagrama::setDesfazer	diagrama.cpp	/^void Diagrama::setDesfazer(QGraphicsItem *item)$/;"	f	class:Diagrama	signature:(QGraphicsItem *item)
Diagrama::setDesfazer	diagrama.h	/^    void setDesfazer( QGraphicsItem *item );$/;"	p	class:Diagrama	access:public	signature:( QGraphicsItem *item )
Diagrama::setTipoER	diagrama.h	/^    void setTipoER( TipoER tipo ) { this->tipoER = tipo; }$/;"	f	class:Diagrama	access:public	signature:( TipoER tipo )
Diagrama::tipoER	diagrama.h	/^    TipoER tipoER;$/;"	m	class:Diagrama	access:private
Diagrama::tipoGenEsp	diagrama.h	/^    Texto *tipoGenEsp;$/;"	m	class:Diagrama	access:private
DiagramaView	diagramaview.cpp	/^DiagramaView::DiagramaView(QGraphicsScene * scene, QWidget *parent) : QGraphicsView(scene, parent), antigoZoom(100.0)$/;"	f	class:DiagramaView	signature:(QGraphicsScene * scene, QWidget *parent)
DiagramaView	diagramaview.cpp	/^DiagramaView::DiagramaView(QWidget *parent) :$/;"	f	class:DiagramaView	signature:(QWidget *parent)
DiagramaView	diagramaview.h	/^    explicit DiagramaView(QGraphicsScene * scene = 0, QWidget *parent = 0);$/;"	p	class:DiagramaView	access:public	signature:(QGraphicsScene * scene = 0, QWidget *parent = 0)
DiagramaView	diagramaview.h	/^    explicit DiagramaView(QWidget *parent = 0);$/;"	p	class:DiagramaView	access:public	signature:(QWidget *parent = 0)
DiagramaView	diagramaview.h	/^class DiagramaView : public QGraphicsView$/;"	c	inherits:QGraphicsView
DiagramaView::DiagramaView	diagramaview.cpp	/^DiagramaView::DiagramaView(QGraphicsScene * scene, QWidget *parent) : QGraphicsView(scene, parent), antigoZoom(100.0)$/;"	f	class:DiagramaView	signature:(QGraphicsScene * scene, QWidget *parent)
DiagramaView::DiagramaView	diagramaview.cpp	/^DiagramaView::DiagramaView(QWidget *parent) :$/;"	f	class:DiagramaView	signature:(QWidget *parent)
DiagramaView::DiagramaView	diagramaview.h	/^    explicit DiagramaView(QGraphicsScene * scene = 0, QWidget *parent = 0);$/;"	p	class:DiagramaView	access:public	signature:(QGraphicsScene * scene = 0, QWidget *parent = 0)
DiagramaView::DiagramaView	diagramaview.h	/^    explicit DiagramaView(QWidget *parent = 0);$/;"	p	class:DiagramaView	access:public	signature:(QWidget *parent = 0)
DiagramaView::antigoZoom	diagramaview.h	/^    qreal antigoZoom;$/;"	m	class:DiagramaView	access:private
DiagramaView::mScrool	diagramaview.h	/^    QSpinBox * mScrool;$/;"	m	class:DiagramaView	access:protected
DiagramaView::mudandoZoom	diagramaview.h	/^    void mudandoZoom(int zoomLevel);$/;"	p	class:DiagramaView	access:protected	signature:(int zoomLevel)
DiagramaView::setScrool	diagramaview.cpp	/^void DiagramaView::setScrool(QSpinBox *scrool)$/;"	f	class:DiagramaView	signature:(QSpinBox *scrool)
DiagramaView::setScrool	diagramaview.h	/^    void setScrool(QSpinBox * scrool);$/;"	p	class:DiagramaView	access:public	signature:(QSpinBox * scrool)
DiagramaView::setarZoom	diagramaview.cpp	/^void DiagramaView::setarZoom(int zoomLevel)$/;"	f	class:DiagramaView	signature:(int zoomLevel)
DiagramaView::setarZoom	diagramaview.h	/^    void setarZoom(int zoomLevel);$/;"	p	class:DiagramaView	access:public	signature:(int zoomLevel)
DiagramaView::wheelEvent	diagramaview.cpp	/^void DiagramaView::wheelEvent(QWheelEvent *event)$/;"	f	class:DiagramaView	signature:(QWheelEvent *event)
DiagramaView::wheelEvent	diagramaview.h	/^    virtual void wheelEvent(QWheelEvent *event);$/;"	p	class:DiagramaView	access:protected	signature:(QWheelEvent *event)
Dialog	dialog.cpp	/^Dialog::Dialog(QWidget *parent) : QWidget(parent)$/;"	f	class:Dialog	signature:(QWidget *parent)
Dialog	dialog.h	/^    Dialog(QWidget *parent = 0);$/;"	p	class:Dialog	access:public	signature:(QWidget *parent = 0)
Dialog	dialog.h	/^class Dialog : public QWidget$/;"	c	inherits:QWidget
Dialog::Dialog	dialog.cpp	/^Dialog::Dialog(QWidget *parent) : QWidget(parent)$/;"	f	class:Dialog	signature:(QWidget *parent)
Dialog::Dialog	dialog.h	/^    Dialog(QWidget *parent = 0);$/;"	p	class:Dialog	access:public	signature:(QWidget *parent = 0)
Dialog::mostrarCardinalidade	dialog.cpp	/^QString Dialog::mostrarCardinalidade()$/;"	f	class:Dialog	signature:()
Dialog::mostrarCardinalidade	dialog.h	/^    QString mostrarCardinalidade();$/;"	p	class:Dialog	access:public	signature:()
Dialog::mostrarTipoGenEsp	dialog.cpp	/^QString Dialog::mostrarTipoGenEsp()$/;"	f	class:Dialog	signature:()
Dialog::mostrarTipoGenEsp	dialog.h	/^    QString mostrarTipoGenEsp();$/;"	p	class:Dialog	access:public	signature:()
LIGACOES_H	ligacao.h	4;"	d
Ligacao	ligacao.cpp	/^Ligacao::Ligacao(QGraphicsItem *item1, QGraphicsItem *item2, QGraphicsItem *parent ) : QGraphicsLineItem(parent)$/;"	f	class:Ligacao	signature:(QGraphicsItem *item1, QGraphicsItem *item2, QGraphicsItem *parent )
Ligacao	ligacao.h	/^    Ligacao( QGraphicsItem *item1, QGraphicsItem *item2, QGraphicsItem *parent = 0 );$/;"	p	class:Ligacao	access:public	signature:( QGraphicsItem *item1, QGraphicsItem *item2, QGraphicsItem *parent = 0 )
Ligacao	ligacao.h	/^class Ligacao : public QObject, public QGraphicsLineItem$/;"	c	inherits:QObject,QGraphicsLineItem
Ligacao::Ligacao	ligacao.cpp	/^Ligacao::Ligacao(QGraphicsItem *item1, QGraphicsItem *item2, QGraphicsItem *parent ) : QGraphicsLineItem(parent)$/;"	f	class:Ligacao	signature:(QGraphicsItem *item1, QGraphicsItem *item2, QGraphicsItem *parent )
Ligacao::Ligacao	ligacao.h	/^    Ligacao( QGraphicsItem *item1, QGraphicsItem *item2, QGraphicsItem *parent = 0 );$/;"	p	class:Ligacao	access:public	signature:( QGraphicsItem *item1, QGraphicsItem *item2, QGraphicsItem *parent = 0 )
Ligacao::RemoveAtributoAssociado	ligacao.h	/^    void RemoveAtributoAssociado( int index ) { this->atributo_associado.removeAt(index); }$/;"	f	class:Ligacao	access:public	signature:( int index )
Ligacao::RemoveTodasCardinalidadesAssociadas	ligacao.h	/^    void RemoveTodasCardinalidadesAssociadas() { this->cardinalidades_associadas.erase(this->cardinalidades_associadas.begin(), this->cardinalidades_associadas.end()); }$/;"	f	class:Ligacao	access:public	signature:()
Ligacao::RemoveTodosAtributosAssociados	ligacao.h	/^    void RemoveTodosAtributosAssociados() { this->atributo_associado.erase(this->atributo_associado.begin(), this->atributo_associado.end()); }$/;"	f	class:Ligacao	access:public	signature:()
Ligacao::Remove_Cardinalidade_Associada	ligacao.h	/^    void Remove_Cardinalidade_Associada( int index ) { this->cardinalidades_associadas.removeAt(index); }$/;"	f	class:Ligacao	access:public	signature:( int index )
Ligacao::Type	ligacao.h	/^    enum { Type = UserType + 2 };$/;"	e	enum:Ligacao::__anon1
Ligacao::addPoligonoAssociado	ligacao.h	/^    public addPoligonoAssociado(Poligono * pol) {$/;"	f	class:Ligacao	access:public	signature:(Poligono * pol)
Ligacao::atributo_associado	ligacao.h	/^    QList< Atributo * > atributo_associado;$/;"	m	class:Ligacao	access:private
Ligacao::atualizaPos	ligacao.cpp	/^void Ligacao::atualizaPos()$/;"	f	class:Ligacao	signature:()
Ligacao::atualizaPos	ligacao.h	/^    void atualizaPos();$/;"	p	class:Ligacao	access:public	signature:()
Ligacao::atualizaPos2	ligacao.cpp	/^void Ligacao::atualizaPos2()$/;"	f	class:Ligacao	signature:()
Ligacao::atualizaPos2	ligacao.h	/^    void atualizaPos2();$/;"	p	class:Ligacao	access:public	signature:()
Ligacao::cardItem	ligacao.h	/^    Cardinalidade *cardItem;$/;"	m	class:Ligacao	access:private
Ligacao::cardinalidades_associadas	ligacao.h	/^    QList< Cardinalidade * > cardinalidades_associadas;$/;"	m	class:Ligacao	access:private
Ligacao::castItem1P	ligacao.h	/^    Poligono *castItem1P;$/;"	m	class:Ligacao	access:private
Ligacao::castItem2P	ligacao.h	/^    Poligono *castItem2P;$/;"	m	class:Ligacao	access:private
Ligacao::castItemA	ligacao.h	/^    Atributo *castItemA;$/;"	m	class:Ligacao	access:private
Ligacao::entidadeFracaAtiva	ligacao.h	/^    bool entidadeFracaAtiva;$/;"	m	class:Ligacao	access:private
Ligacao::entidades_associadas	ligacao.h	/^    QList< Poligono * > entidades_associadas;$/;"	m	class:Ligacao	access:private
Ligacao::entidades_associativas_associadas	ligacao.h	/^    QList < Poligono * > entidades_associativas_associadas;$/;"	m	class:Ligacao	access:private
Ligacao::generalizacao_especializacao_associada	ligacao.h	/^    QList< Poligono * > generalizacao_especializacao_associada;$/;"	m	class:Ligacao	access:private
Ligacao::getAtributoAssociado	ligacao.h	/^    QList< Atributo *> getAtributoAssociado() { return atributo_associado; }$/;"	f	class:Ligacao	access:public	signature:()
Ligacao::getCardItem	ligacao.h	/^    Cardinalidade * getCardItem() { return this->cardItem; }$/;"	f	class:Ligacao	access:public	signature:()
Ligacao::getCardinalidades_Associadas	ligacao.h	/^    QList< Cardinalidade *> getCardinalidades_Associadas() { return cardinalidades_associadas; }$/;"	f	class:Ligacao	access:public	signature:()
Ligacao::getCastItem1P	ligacao.h	/^    Poligono * getCastItem1P() { return this->castItem1P; }$/;"	f	class:Ligacao	access:public	signature:()
Ligacao::getCastItem2P	ligacao.h	/^    Poligono * getCastItem2P() { return this->castItem2P; }$/;"	f	class:Ligacao	access:public	signature:()
Ligacao::getCastItemA	ligacao.h	/^    Atributo * getCastItemA() { return this->castItemA; }$/;"	f	class:Ligacao	access:public	signature:()
Ligacao::getEntidadeFracaAtiva	ligacao.h	/^    bool getEntidadeFracaAtiva () { return this->entidadeFracaAtiva; }$/;"	f	class:Ligacao	access:public	signature:()
Ligacao::getEntidades_Associadas	ligacao.h	/^    QList< Poligono *> getEntidades_Associadas() { return entidades_associadas; }$/;"	f	class:Ligacao	access:public	signature:()
Ligacao::getEntidades_Associativas_Associadas	ligacao.h	/^    QList< Poligono *> getEntidades_Associativas_Associadas() { return entidades_associativas_associadas; }$/;"	f	class:Ligacao	access:public	signature:()
Ligacao::getPoligonosAssociadoOfType	ligacao.h	/^    public getPoligonosAssociadoOfType() {$/;"	f	class:Ligacao	access:public	signature:()
Ligacao::getRelacionamentos_Associados	ligacao.h	/^    QList< Poligono *> getRelacionamentos_Associados() { return relacionamentos_associados; }$/;"	f	class:Ligacao	access:public	signature:()
Ligacao::linhaAlterada	ligacao.h	/^    void linhaAlterada( QLineF nova_linha );$/;"	p	class:Ligacao	access:private	signature:( QLineF nova_linha )
Ligacao::nomeLigacao1	ligacao.h	/^    Texto *nomeLigacao1, *nomeLigacao2;$/;"	m	class:Ligacao	access:private
Ligacao::nomeLigacao2	ligacao.h	/^    Texto *nomeLigacao1, *nomeLigacao2;$/;"	m	class:Ligacao	access:private
Ligacao::paint	ligacao.cpp	/^void Ligacao::paint(QPainter *painter, const QStyleOptionGraphicsItem *option, QWidget *widget)$/;"	f	class:Ligacao	signature:(QPainter *painter, const QStyleOptionGraphicsItem *option, QWidget *widget)
Ligacao::paint	ligacao.h	/^    void paint(QPainter *painter, const QStyleOptionGraphicsItem *option, QWidget *widget);$/;"	p	class:Ligacao	access:public	signature:(QPainter *painter, const QStyleOptionGraphicsItem *option, QWidget *widget)
Ligacao::poligonos_associados	ligacao.h	/^    QMap<Poligono::Tipo, QList<Poligono *> > poligonos_associados;$/;"	m	class:Ligacao	access:private
Ligacao::relacionamentos_associados	ligacao.h	/^    QList< Poligono * > relacionamentos_associados;$/;"	m	class:Ligacao	access:private
Ligacao::removePoligonoAssociadoAt	ligacao.h	/^    public removePoligonoAssociadoAt(int index) {$/;"	f	class:Ligacao	access:public	signature:(int index)
Ligacao::removeTodosPoligonosOfType	ligacao.h	/^    public removeTodosPoligonosOfType() {$/;"	f	class:Ligacao	access:public	signature:()
Ligacao::setAtributoAssociado	ligacao.h	/^    void setAtributoAssociado( Atributo *aa ) { this->atributo_associado.push_back(aa); }$/;"	f	class:Ligacao	access:public	signature:( Atributo *aa )
Ligacao::setCardinalidades_Associadas	ligacao.h	/^    void setCardinalidades_Associadas( Cardinalidade *ca ) { this->cardinalidades_associadas.push_back(ca); }$/;"	f	class:Ligacao	access:public	signature:( Cardinalidade *ca )
Ligacao::setEntidadeFracaAtiva	ligacao.h	/^    void setEntidadeFracaAtiva( bool set ) { this->entidadeFracaAtiva = set; }$/;"	f	class:Ligacao	access:public	signature:( bool set )
Ligacao::shape	ligacao.cpp	/^QPainterPath Ligacao::shape() const$/;"	f	class:Ligacao	signature:() const
Ligacao::shape	ligacao.h	/^    QPainterPath shape() const;$/;"	p	class:Ligacao	access:public	signature:() const
Ligacao::temp	ligacao.h	/^    QPointF temp;$/;"	m	class:Ligacao	access:private
Ligacao::type	ligacao.h	/^    int type() const$/;"	f	class:Ligacao	access:public	signature:() const
Lselecionar	diagrama.h	/^    QGraphicsLineItem *Lselecionar;$/;"	m	class:Diagrama	access:private
MAINWINDOW_H	mainwindow.h	2;"	d
MainWindow	mainwindow.cpp	/^MainWindow::MainWindow(QWidget *parent) :$/;"	f	class:MainWindow	signature:(QWidget *parent)
MainWindow	mainwindow.h	/^    explicit MainWindow(QWidget *parent = 0);$/;"	p	class:MainWindow	access:public	signature:(QWidget *parent = 0)
MainWindow	mainwindow.h	/^class MainWindow : public QMainWindow$/;"	c	inherits:QMainWindow
MainWindow::MainWindow	mainwindow.cpp	/^MainWindow::MainWindow(QWidget *parent) :$/;"	f	class:MainWindow	signature:(QWidget *parent)
MainWindow::MainWindow	mainwindow.h	/^    explicit MainWindow(QWidget *parent = 0);$/;"	p	class:MainWindow	access:public	signature:(QWidget *parent = 0)
MainWindow::abrir	mainwindow.cpp	/^void MainWindow::abrir()$/;"	f	class:MainWindow	signature:()
MainWindow::abrir	mainwindow.h	/^    void abrir();$/;"	p	class:MainWindow	access:private	signature:()
MainWindow::abrirAction	mainwindow.h	/^    QAction *abrirAction;$/;"	m	class:MainWindow	access:private
MainWindow::abrirArquivo	mainwindow.cpp	/^void MainWindow::abrirArquivo(const QString nomeArquivo)$/;"	f	class:MainWindow	signature:(const QString nomeArquivo)
MainWindow::abrirArquivo	mainwindow.h	/^    void abrirArquivo(const QString nomeArquivo);$/;"	p	class:MainWindow	access:private	signature:(const QString nomeArquivo)
MainWindow::abrirAtributo	mainwindow.h	/^    Atributo *abrirAtributo;$/;"	m	class:MainWindow	access:private
MainWindow::abrirAutoRelacionamento1	mainwindow.h	/^    Texto *abrirAutoRelacionamento1;$/;"	m	class:MainWindow	access:private
MainWindow::abrirAutoRelacionamento2	mainwindow.h	/^    Texto *abrirAutoRelacionamento2;$/;"	m	class:MainWindow	access:private
MainWindow::abrirCardinalidade	mainwindow.h	/^    Cardinalidade *abrirCardinalidade;$/;"	m	class:MainWindow	access:private
MainWindow::abrirPoligono	mainwindow.h	/^    Poligono *abrirPoligono;$/;"	m	class:MainWindow	access:private
MainWindow::abrirPoligono2	mainwindow.h	/^    Poligono *abrirPoligono2;$/;"	m	class:MainWindow	access:private
MainWindow::abrirTexto	mainwindow.h	/^    Texto *abrirTexto;$/;"	m	class:MainWindow	access:private
MainWindow::ajudaAction	mainwindow.h	/^    QAction *ajudaAction;$/;"	m	class:MainWindow	access:private
MainWindow::ajudaMenu	mainwindow.h	/^    QMenu *ajudaMenu;$/;"	m	class:MainWindow	access:private
MainWindow::ampliar	mainwindow.h	/^    QToolButton *ampliar;$/;"	m	class:MainWindow	access:private
MainWindow::arquivoMenu	mainwindow.h	/^    QMenu *arquivoMenu;$/;"	m	class:MainWindow	access:private
MainWindow::atributo	mainwindow.h	/^    QToolButton *atributo;$/;"	m	class:MainWindow	access:private
MainWindow::atributo_identif	mainwindow.h	/^    QToolButton *atributo_identif;$/;"	m	class:MainWindow	access:private
MainWindow::botoesER	mainwindow.h	/^    QButtonGroup *botoesER;$/;"	m	class:MainWindow	access:private
MainWindow::botoesERClicked	mainwindow.cpp	/^void MainWindow::botoesERClicked(int id)$/;"	f	class:MainWindow	signature:(int id)
MainWindow::botoesERClicked	mainwindow.h	/^    void botoesERClicked(int id);$/;"	p	class:MainWindow	access:private	signature:(int id)
MainWindow::botoesML	mainwindow.h	/^    QButtonGroup *botoesML;    $/;"	m	class:MainWindow	access:private
MainWindow::botoesMLClicked	mainwindow.cpp	/^void MainWindow::botoesMLClicked(int id)$/;"	f	class:MainWindow	signature:(int id)
MainWindow::botoesMLClicked	mainwindow.h	/^    void botoesMLClicked(int id);$/;"	p	class:MainWindow	access:private	signature:(int id)
MainWindow::botoesManip	mainwindow.h	/^    QButtonGroup *botoesManip;$/;"	m	class:MainWindow	access:private
MainWindow::botoesManipClicked	mainwindow.cpp	/^void MainWindow::botoesManipClicked(int id)$/;"	f	class:MainWindow	signature:(int id)
MainWindow::botoesManipClicked	mainwindow.h	/^    void botoesManipClicked(int id);$/;"	p	class:MainWindow	access:private	signature:(int id)
MainWindow::castAtributo	mainwindow.h	/^    Atributo *castAtributo;$/;"	m	class:MainWindow	access:private
MainWindow::castAtributo2	mainwindow.h	/^    Atributo *castAtributo2;$/;"	m	class:MainWindow	access:private
MainWindow::castCardinalidade	mainwindow.h	/^    Cardinalidade *castCardinalidade;$/;"	m	class:MainWindow	access:private
MainWindow::castEntidade	mainwindow.h	/^    Poligono *castEntidade;$/;"	m	class:MainWindow	access:private
MainWindow::castLigacao	mainwindow.h	/^    Ligacao *castLigacao;$/;"	m	class:MainWindow	access:private
MainWindow::castLinha	mainwindow.h	/^    Ligacao *castLinha;$/;"	m	class:MainWindow	access:private
MainWindow::castPoligono	mainwindow.h	/^    Poligono *castPoligono;$/;"	m	class:MainWindow	access:private
MainWindow::castPoligono2	mainwindow.h	/^    Poligono *castPoligono2;$/;"	m	class:MainWindow	access:private
MainWindow::cast_poligono	mainwindow.h	/^    Poligono *cast_poligono;$/;"	m	class:MainWindow	access:private
MainWindow::createActions	mainwindow.cpp	/^void MainWindow::createActions()$/;"	f	class:MainWindow	signature:()
MainWindow::createActions	mainwindow.h	/^    void createActions();$/;"	p	class:MainWindow	access:private	signature:()
MainWindow::createMenu	mainwindow.cpp	/^void MainWindow::createMenu()$/;"	f	class:MainWindow	signature:()
MainWindow::createMenu	mainwindow.h	/^    void createMenu();$/;"	p	class:MainWindow	access:private	signature:()
MainWindow::createToolBar	mainwindow.cpp	/^void MainWindow::createToolBar()$/;"	f	class:MainWindow	signature:()
MainWindow::createToolBar	mainwindow.h	/^    void createToolBar();$/;"	p	class:MainWindow	access:private	signature:()
MainWindow::deletar	mainwindow.h	/^    QToolButton *deletar;$/;"	m	class:MainWindow	access:private
MainWindow::deletarSelecionado	mainwindow.cpp	/^void MainWindow::deletarSelecionado() {$/;"	f	class:MainWindow	signature:()
MainWindow::deletarSelecionado	mainwindow.h	/^    void deletarSelecionado();$/;"	p	class:MainWindow	access:private	signature:()
MainWindow::desfazer	mainwindow.cpp	/^void MainWindow::desfazer()$/;"	f	class:MainWindow	signature:()
MainWindow::desfazer	mainwindow.h	/^    void desfazer();$/;"	p	class:MainWindow	access:private	signature:()
MainWindow::desfazerAction	mainwindow.h	/^    QAction *desfazerAction;$/;"	m	class:MainWindow	access:private
MainWindow::editarMenu	mainwindow.h	/^    QMenu *editarMenu;$/;"	m	class:MainWindow	access:private
MainWindow::entid_associativa	mainwindow.h	/^    QToolButton *entid_associativa;$/;"	m	class:MainWindow	access:private
MainWindow::entidade	mainwindow.h	/^    QToolButton *entidade;$/;"	m	class:MainWindow	access:private
MainWindow::entidadeFraca	mainwindow.h	/^    QToolButton *entidadeFraca;$/;"	m	class:MainWindow	access:private
MainWindow::exibicaoToolBar	mainwindow.h	/^    QToolBar * exibicaoToolBar;$/;"	m	class:MainWindow	access:private
MainWindow::formas	mainwindow.h	/^    QToolBar *formas;$/;"	m	class:MainWindow	access:private
MainWindow::gen_esp	mainwindow.h	/^    QToolButton *gen_esp;$/;"	m	class:MainWindow	access:private
MainWindow::itemInserido	mainwindow.cpp	/^void MainWindow::itemInserido()$/;"	f	class:MainWindow	signature:()
MainWindow::itemInserido	mainwindow.h	/^    void itemInserido();$/;"	p	class:MainWindow	access:private	signature:()
MainWindow::lig	mainwindow.h	/^    Ligacao *lig;$/;"	m	class:MainWindow	access:private
MainWindow::linhas	mainwindow.h	/^    QToolButton *linhas;$/;"	m	class:MainWindow	access:private
MainWindow::lixo	mainwindow.h	/^    QList<QGraphicsItem *> lixo;$/;"	m	class:MainWindow	access:private
MainWindow::manipulacoes	mainwindow.h	/^    QToolBar *manipulacoes;$/;"	m	class:MainWindow	access:private
MainWindow::mouse	mainwindow.h	/^    QToolButton *mouse;$/;"	m	class:MainWindow	access:private
MainWindow::mouseLinha	mainwindow.h	/^    QToolBar *mouseLinha;$/;"	m	class:MainWindow	access:private
MainWindow::novaAction	mainwindow.h	/^    QAction *novaAction;$/;"	m	class:MainWindow	access:private
MainWindow::novaJanela	mainwindow.cpp	/^void MainWindow::novaJanela()$/;"	f	class:MainWindow	signature:()
MainWindow::novaJanela	mainwindow.h	/^    void novaJanela();$/;"	p	class:MainWindow	access:private	signature:()
MainWindow::organizarEntidades	mainwindow.cpp	/^void MainWindow::organizarEntidades(int direcao) \/\/ 0 = Hor, 1 = Vert$/;"	f	class:MainWindow	signature:(int direcao)
MainWindow::organizarEntidades	mainwindow.h	/^    void organizarEntidades(int direcao);$/;"	p	class:MainWindow	access:private	signature:(int direcao)
MainWindow::organizarHor	mainwindow.h	/^    QToolButton *organizarHor;$/;"	m	class:MainWindow	access:private
MainWindow::organizarVer	mainwindow.h	/^    QToolButton *organizarVer;$/;"	m	class:MainWindow	access:private
MainWindow::pilhaDeAcoes	mainwindow.h	/^    AcoesPilha * pilhaDeAcoes;$/;"	m	class:MainWindow	access:private
MainWindow::reduzir	mainwindow.h	/^    QToolButton *reduzir;$/;"	m	class:MainWindow	access:private
MainWindow::refazer	mainwindow.cpp	/^void MainWindow::refazer()$/;"	f	class:MainWindow	signature:()
MainWindow::refazer	mainwindow.h	/^    void refazer();$/;"	p	class:MainWindow	access:private	signature:()
MainWindow::refazerAction	mainwindow.h	/^    QAction *refazerAction;$/;"	m	class:MainWindow	access:private
MainWindow::relacionamento	mainwindow.h	/^    QToolButton *relacionamento;$/;"	m	class:MainWindow	access:private
MainWindow::sairAction	mainwindow.h	/^    QAction *sairAction;$/;"	m	class:MainWindow	access:private
MainWindow::salvarAction	mainwindow.h	/^    QAction *salvarAction;$/;"	m	class:MainWindow	access:private
MainWindow::salvarArquivo	mainwindow.cpp	/^void MainWindow::salvarArquivo(const QString nomeArquivo)$/;"	f	class:MainWindow	signature:(const QString nomeArquivo)
MainWindow::salvarArquivo	mainwindow.h	/^    void salvarArquivo(const QString nomeArquivo);$/;"	p	class:MainWindow	access:private	signature:(const QString nomeArquivo)
MainWindow::salvarComo	mainwindow.cpp	/^void MainWindow::salvarComo()$/;"	f	class:MainWindow	signature:()
MainWindow::salvarComo	mainwindow.h	/^    void salvarComo();$/;"	p	class:MainWindow	access:private	signature:()
MainWindow::scene	mainwindow.h	/^    Diagrama *scene;$/;"	m	class:MainWindow	access:private
MainWindow::scroolZoom	mainwindow.h	/^    QSpinBox * scroolZoom;$/;"	m	class:MainWindow	access:private
MainWindow::sobre	mainwindow.cpp	/^void MainWindow::sobre()$/;"	f	class:MainWindow	signature:()
MainWindow::sobre	mainwindow.h	/^    void sobre();$/;"	p	class:MainWindow	access:private	signature:()
MainWindow::ui	mainwindow.h	/^    Ui::MainWindow *ui;$/;"	m	class:MainWindow	access:private
MainWindow::view	mainwindow.h	/^    DiagramaView *view;$/;"	m	class:MainWindow	access:private
MainWindow::~MainWindow	mainwindow.cpp	/^MainWindow::~MainWindow()$/;"	f	class:MainWindow	signature:()
MainWindow::~MainWindow	mainwindow.h	/^    ~MainWindow();$/;"	p	class:MainWindow	access:public	signature:()
Poligono	poligono.cpp	/^Poligono::Poligono(Tipo tipo, bool pai, QGraphicsItem *parent, QGraphicsScene *scene )$/;"	f	class:Poligono	signature:(Tipo tipo, bool pai, QGraphicsItem *parent, QGraphicsScene *scene )
Poligono	poligono.h	/^    Poligono(Tipo tipo, bool pai, QGraphicsItem *parent = 0, QGraphicsScene *scene = 0);$/;"	p	class:Poligono	access:public	signature:(Tipo tipo, bool pai, QGraphicsItem *parent = 0, QGraphicsScene *scene = 0)
Poligono	poligono.h	/^class Poligono : public QObject, public QGraphicsPolygonItem$/;"	c	inherits:QObject,QGraphicsPolygonItem
Poligono::Poligono	poligono.cpp	/^Poligono::Poligono(Tipo tipo, bool pai, QGraphicsItem *parent, QGraphicsScene *scene )$/;"	f	class:Poligono	signature:(Tipo tipo, bool pai, QGraphicsItem *parent, QGraphicsScene *scene )
Poligono::Poligono	poligono.h	/^    Poligono(Tipo tipo, bool pai, QGraphicsItem *parent = 0, QGraphicsScene *scene = 0);$/;"	p	class:Poligono	access:public	signature:(Tipo tipo, bool pai, QGraphicsItem *parent = 0, QGraphicsScene *scene = 0)
Poligono::Tipo	poligono.h	/^    enum Tipo { entidade, relacionamento, gen_esp, ent_associativa };$/;"	g	class:Poligono	access:public
Poligono::Type	poligono.h	/^    enum { Type = UserType + 1 };$/;"	e	enum:Poligono::__anon3
Poligono::acompanharObjeto	poligono.cpp	/^void Poligono::acompanharObjeto(const QPointF objNewPos)$/;"	f	class:Poligono	signature:(const QPointF objNewPos)
Poligono::acompanharObjeto	poligono.h	/^    void acompanharObjeto(const QPointF objNewPos);$/;"	p	class:Poligono	access:public	signature:(const QPointF objNewPos)
Poligono::addPoligonosAssociado	poligono.h	/^    void addPoligonosAssociado(Poligono * pol) {$/;"	f	class:Poligono	access:public	signature:(Poligono * pol)
Poligono::atributosAssociados	poligono.h	/^    QList< Atributo * > atributosAssociados;$/;"	m	class:Poligono	access:private
Poligono::atualizaItem	poligono.cpp	/^void Poligono::atualizaItem()$/;"	f	class:Poligono	signature:()
Poligono::atualizaItem	poligono.h	/^    void atualizaItem();$/;"	p	class:Poligono	access:public	signature:()
Poligono::autoRelacionamento	poligono.h	/^    bool autoRelacionamento;$/;"	m	class:Poligono	access:private
Poligono::cardinalidades_associadas	poligono.h	/^    QList< Cardinalidade * > cardinalidades_associadas;$/;"	m	class:Poligono	access:private
Poligono::conectado	poligono.h	/^    bool conectado;$/;"	m	class:Poligono	access:private
Poligono::ent_associativa	poligono.h	/^    enum Tipo { entidade, relacionamento, gen_esp, ent_associativa };$/;"	e	enum:Poligono::Tipo
Poligono::entidade	poligono.h	/^    enum Tipo { entidade, relacionamento, gen_esp, ent_associativa };$/;"	e	enum:Poligono::Tipo
Poligono::gen_esp	poligono.h	/^    enum Tipo { entidade, relacionamento, gen_esp, ent_associativa };$/;"	e	enum:Poligono::Tipo
Poligono::getAtributosAssociados	poligono.h	/^    QList<Atributo *> getAtributosAssociados() { return atributosAssociados; }$/;"	f	class:Poligono	access:public	signature:()
Poligono::getAutoRelacionamento	poligono.h	/^    bool getAutoRelacionamento() { return this->autoRelacionamento; }$/;"	f	class:Poligono	access:public	signature:()
Poligono::getCardinalidades_Associadas	poligono.h	/^    QList< Cardinalidade *> getCardinalidades_Associadas() { return cardinalidades_associadas; }$/;"	f	class:Poligono	access:public	signature:()
Poligono::getConectado	poligono.h	/^    bool getConectado() { return this->conectado; }$/;"	f	class:Poligono	access:public	signature:()
Poligono::getLinhas_Associadas	poligono.h	/^    QList< Ligacao *> getLinhas_Associadas() { return linhas_associadas; }$/;"	f	class:Poligono	access:public	signature:()
Poligono::getPoligonoAssociado	poligono.h	/^    Poligono * getPoligonoAssociado() { return polig_associado; }$/;"	f	class:Poligono	access:public	signature:()
Poligono::getPoligonoAssociados	poligono.h	/^    QList<Poligono *> getPoligonoAssociados() {$/;"	f	class:Poligono	access:public	signature:()
Poligono::getTipo	poligono.h	/^    Tipo getTipo() { return tipo; }$/;"	f	class:Poligono	access:public	signature:()
Poligono::itemChange	poligono.cpp	/^QVariant Poligono::itemChange(GraphicsItemChange change, const QVariant &value)$/;"	f	class:Poligono	signature:(GraphicsItemChange change, const QVariant &value)
Poligono::itemChange	poligono.h	/^    QVariant itemChange(GraphicsItemChange change, const QVariant &value);$/;"	p	class:Poligono	access:protected	signature:(GraphicsItemChange change, const QVariant &value)
Poligono::itemRemovido	poligono.cpp	/^void Poligono::itemRemovido()$/;"	f	class:Poligono	signature:()
Poligono::itemRemovido	poligono.h	/^    void itemRemovido();$/;"	p	class:Poligono	access:public	signature:()
Poligono::linhas_associadas	poligono.h	/^    QList< Ligacao * > linhas_associadas;$/;"	m	class:Poligono	access:private
Poligono::paint	poligono.cpp	/^void Poligono::paint(QPainter *painter, const QStyleOptionGraphicsItem *option, QWidget *widget)$/;"	f	class:Poligono	signature:(QPainter *painter, const QStyleOptionGraphicsItem *option, QWidget *widget)
Poligono::paint	poligono.h	/^    void paint(QPainter *painter, const QStyleOptionGraphicsItem *option, QWidget *widget);$/;"	p	class:Poligono	access:public	signature:(QPainter *painter, const QStyleOptionGraphicsItem *option, QWidget *widget)
Poligono::polig_associado	poligono.h	/^    Poligono * polig_associado;$/;"	m	class:Poligono	access:private
Poligono::poligono	poligono.h	/^    QPolygonF poligono;$/;"	m	class:Poligono	access:private
Poligono::poligonosAssociados	poligono.h	/^    QMap<Tipo, QList<Poligono *> > poligonosAssociados;$/;"	m	class:Poligono	access:private
Poligono::posicaoAlterada	poligono.h	/^    void posicaoAlterada();$/;"	p	class:Poligono	access:protected	signature:()
Poligono::posicaoAlterada	poligono.h	/^    void posicaoAlterada(const QPointF newPos);$/;"	p	class:Poligono	access:protected	signature:(const QPointF newPos)
Poligono::relacionamento	poligono.h	/^    enum Tipo { entidade, relacionamento, gen_esp, ent_associativa };$/;"	e	enum:Poligono::Tipo
Poligono::removeAtributoAssociado	poligono.h	/^    void removeAtributoAssociado( int index ) { this->atributosAssociados.removeAt(index); }$/;"	f	class:Poligono	access:public	signature:( int index )
Poligono::removePoligonosAssociadoAt	poligono.h	/^    void removePoligonosAssociadoAt(int index) {$/;"	f	class:Poligono	access:public	signature:(int index)
Poligono::removeTodasCardinalidadesAssociadas	poligono.h	/^    void removeTodasCardinalidadesAssociadas() { this->cardinalidades_associadas.erase(this->cardinalidades_associadas.begin(), this->cardinalidades_associadas.end()); }$/;"	f	class:Poligono	access:public	signature:()
Poligono::removeTodasLinhasAssociadas	poligono.h	/^    void removeTodasLinhasAssociadas() { this->linhas_associadas.erase(this->linhas_associadas.begin(), this->linhas_associadas.end()); }$/;"	f	class:Poligono	access:public	signature:()
Poligono::removeTodosAtributosAssociados	poligono.h	/^    void removeTodosAtributosAssociados() {this->atributosAssociados.erase( this->atributosAssociados.begin(), this->atributosAssociados.end()); }$/;"	f	class:Poligono	access:public	signature:()
Poligono::removeTodosPoligonosAssociados	poligono.h	/^    void removeTodosPoligonosAssociados() {$/;"	f	class:Poligono	access:public	signature:()
Poligono::remove_Cardinalidade_Associada	poligono.h	/^    void remove_Cardinalidade_Associada( int index ) { this->cardinalidades_associadas.removeAt(index); }$/;"	f	class:Poligono	access:public	signature:( int index )
Poligono::remove_Linha_Associada	poligono.h	/^    void remove_Linha_Associada( int index ) { this->linhas_associadas.removeAt(index); }$/;"	f	class:Poligono	access:public	signature:( int index )
Poligono::remover	poligono.cpp	/^void Poligono::remover()$/;"	f	class:Poligono	signature:()
Poligono::remover	poligono.h	/^    void remover();$/;"	p	class:Poligono	access:public	signature:()
Poligono::removido	poligono.h	/^    void removido();$/;"	p	class:Poligono	access:protected	signature:()
Poligono::setAtributosAssociados	poligono.h	/^    void setAtributosAssociados( Atributo *aa ) { this->atributosAssociados.push_back(aa); }$/;"	f	class:Poligono	access:public	signature:( Atributo *aa )
Poligono::setAutoRelacionamento	poligono.h	/^    void setAutoRelacionamento( bool a ) { this->autoRelacionamento = a; }$/;"	f	class:Poligono	access:public	signature:( bool a )
Poligono::setCardinalidades_Associadas	poligono.h	/^    void setCardinalidades_Associadas( Cardinalidade *ca ) { this->cardinalidades_associadas.push_back(ca); }$/;"	f	class:Poligono	access:public	signature:( Cardinalidade *ca )
Poligono::setConectado	poligono.h	/^    void setConectado( bool c ) { this->conectado = c; }$/;"	f	class:Poligono	access:public	signature:( bool c )
Poligono::setLinhas_Associadas	poligono.h	/^    void setLinhas_Associadas( Ligacao *la ) { this->linhas_associadas.push_back(la); }$/;"	f	class:Poligono	access:public	signature:( Ligacao *la )
Poligono::setPoligonoAssociado	poligono.h	/^    void setPoligonoAssociado(Poligono * pol) { polig_associado = pol; }$/;"	f	class:Poligono	access:public	signature:(Poligono * pol)
Poligono::setTipo	poligono.h	/^    void setTipo(Tipo tipo) { this->tipo = tipo; }$/;"	f	class:Poligono	access:public	signature:(Tipo tipo)
Poligono::tipo	poligono.h	/^    Tipo tipo;$/;"	m	class:Poligono	access:private
Poligono::type	poligono.h	/^    int type() const$/;"	f	class:Poligono	access:public	signature:() const
RELACIONAMENTO_H	poligono.h	4;"	d
RemoveAtributoAssociado	ligacao.h	/^    void RemoveAtributoAssociado( int index ) { this->atributo_associado.removeAt(index); }$/;"	f	class:Ligacao	access:public	signature:( int index )
RemoveTodasCardinalidadesAssociadas	ligacao.h	/^    void RemoveTodasCardinalidadesAssociadas() { this->cardinalidades_associadas.erase(this->cardinalidades_associadas.begin(), this->cardinalidades_associadas.end()); }$/;"	f	class:Ligacao	access:public	signature:()
RemoveTodasEntidadesAssociadas	atributo.h	/^    void RemoveTodasEntidadesAssociadas() { this->entidades_associadas.erase(this->entidades_associadas.begin(), this->entidades_associadas.end()); }$/;"	f	class:Atributo	access:public	signature:()
RemoveTodasEntidadesAssociadas	cardinalidade.h	/^    void RemoveTodasEntidadesAssociadas() { this->entidades_associadas.erase(this->entidades_associadas.begin(), this->entidades_associadas.end()); }$/;"	f	class:Cardinalidade	access:public	signature:()
RemoveTodasEntidadesAssociativasAssociadas	atributo.h	/^    void RemoveTodasEntidadesAssociativasAssociadas() { this->entidades_associativas_associadas.erase(this->entidades_associativas_associadas.begin(), this->entidades_associativas_associadas.end()); }$/;"	f	class:Atributo	access:public	signature:()
RemoveTodasEntidadesAssociativasAssociadas	cardinalidade.h	/^    void RemoveTodasEntidadesAssociativasAssociadas() { this->entidades_associativas_associadas.erase(this->entidades_associativas_associadas.begin(), this->entidades_associativas_associadas.end()); }$/;"	f	class:Cardinalidade	access:public	signature:()
RemoveTodasLinhasAssociadas	atributo.h	/^    void RemoveTodasLinhasAssociadas() { this->linhaAssociada.erase(this->linhaAssociada.begin(), this->linhaAssociada.end()); }$/;"	f	class:Atributo	access:public	signature:()
RemoveTodosAtributosAssociados	ligacao.h	/^    void RemoveTodosAtributosAssociados() { this->atributo_associado.erase(this->atributo_associado.begin(), this->atributo_associado.end()); }$/;"	f	class:Ligacao	access:public	signature:()
RemoveTodosRelacionamentosAssociados	atributo.h	/^    void RemoveTodosRelacionamentosAssociados() { this->relacionamentos_associados.erase(this->relacionamentos_associados.begin(), this->relacionamentos_associados.end()); }$/;"	f	class:Atributo	access:public	signature:()
RemoveTodosRelacionamentosAssociados	cardinalidade.h	/^    void RemoveTodosRelacionamentosAssociados() { this->relacionamentos_associados.erase(this->relacionamentos_associados.begin(), this->relacionamentos_associados.end()); }$/;"	f	class:Cardinalidade	access:public	signature:()
Remove_Cardinalidade_Associada	ligacao.h	/^    void Remove_Cardinalidade_Associada( int index ) { this->cardinalidades_associadas.removeAt(index); }$/;"	f	class:Ligacao	access:public	signature:( int index )
Remove_Entidade_Associada	cardinalidade.h	/^    void Remove_Entidade_Associada( int index ) { this->entidades_associadas.removeAt(index); }$/;"	f	class:Cardinalidade	access:public	signature:( int index )
Remove_Entidade_Associativa_Associada	cardinalidade.h	/^    void Remove_Entidade_Associativa_Associada( int index ) { this->entidades_associativas_associadas.removeAt(index); }$/;"	f	class:Cardinalidade	access:public	signature:( int index )
Remove_Relacionamento_Associado	cardinalidade.h	/^    void Remove_Relacionamento_Associado( int index ) { this->relacionamentos_associados.removeAt(index); }$/;"	f	class:Cardinalidade	access:public	signature:( int index )
Rselecionar	diagrama.h	/^    QGraphicsRectItem *Rselecionar;$/;"	m	class:Diagrama	access:private
TEXTO_H	texto.h	5;"	d
Texto	texto.cpp	/^Texto::Texto(QGraphicsItem *parent, QGraphicsScene *scene) : QGraphicsTextItem(parent, scene)$/;"	f	class:Texto	signature:(QGraphicsItem *parent, QGraphicsScene *scene)
Texto	texto.h	/^    Texto(QGraphicsItem *parent = 0, QGraphicsScene *scene = 0);$/;"	p	class:Texto	access:public	signature:(QGraphicsItem *parent = 0, QGraphicsScene *scene = 0)
Texto	texto.h	/^class Texto : public QGraphicsTextItem$/;"	c	inherits:QGraphicsTextItem
Texto::Texto	texto.cpp	/^Texto::Texto(QGraphicsItem *parent, QGraphicsScene *scene) : QGraphicsTextItem(parent, scene)$/;"	f	class:Texto	signature:(QGraphicsItem *parent, QGraphicsScene *scene)
Texto::Texto	texto.h	/^    Texto(QGraphicsItem *parent = 0, QGraphicsScene *scene = 0);$/;"	p	class:Texto	access:public	signature:(QGraphicsItem *parent = 0, QGraphicsScene *scene = 0)
Texto::chamarTelaTipoGenEsp	texto.h	/^    Dialog chamarTelaTipoGenEsp;$/;"	m	class:Texto	access:private
Texto::count	texto.h	/^    int count;$/;"	m	class:Texto	access:private
Texto::focusOutEvent	texto.cpp	/^void Texto::focusOutEvent(QFocusEvent *event)$/;"	f	class:Texto	signature:(QFocusEvent *event)
Texto::focusOutEvent	texto.h	/^    void focusOutEvent(QFocusEvent *event);$/;"	p	class:Texto	access:public	signature:(QFocusEvent *event)
Texto::genEspAtiva	texto.h	/^    bool genEspAtiva;$/;"	m	class:Texto	access:private
Texto::getCount	texto.h	/^    int getCount() { return count; }$/;"	f	class:Texto	access:public	signature:()
Texto::getGenEspAtiva	texto.h	/^    bool getGenEspAtiva() { return this->genEspAtiva; }$/;"	f	class:Texto	access:public	signature:()
Texto::getTipoGenEsp	texto.h	/^    QString getTipoGenEsp () { return this->tipoGenEsp; }$/;"	f	class:Texto	access:public	signature:()
Texto::mousePressEvent	texto.cpp	/^void Texto::mousePressEvent(QGraphicsSceneMouseEvent *event)$/;"	f	class:Texto	signature:(QGraphicsSceneMouseEvent *event)
Texto::mousePressEvent	texto.h	/^    void mousePressEvent(QGraphicsSceneMouseEvent *event);$/;"	p	class:Texto	access:public	signature:(QGraphicsSceneMouseEvent *event)
Texto::mouseReleaseEvent	texto.cpp	/^void Texto::mouseReleaseEvent(QGraphicsSceneMouseEvent *event)$/;"	f	class:Texto	signature:(QGraphicsSceneMouseEvent *event)
Texto::mouseReleaseEvent	texto.h	/^    void mouseReleaseEvent(QGraphicsSceneMouseEvent *event);$/;"	p	class:Texto	access:public	signature:(QGraphicsSceneMouseEvent *event)
Texto::paint	texto.cpp	/^void Texto::paint(QPainter *painter, const QStyleOptionGraphicsItem *option, QWidget *widget)$/;"	f	class:Texto	signature:(QPainter *painter, const QStyleOptionGraphicsItem *option, QWidget *widget)
Texto::paint	texto.h	/^    void paint(QPainter *painter, const QStyleOptionGraphicsItem *option, QWidget *widget);$/;"	p	class:Texto	access:public	signature:(QPainter *painter, const QStyleOptionGraphicsItem *option, QWidget *widget)
Texto::setCount	texto.h	/^    void setCount( int countR ) { this->count = countR; }$/;"	f	class:Texto	access:public	signature:( int countR )
Texto::setGenEspAtiva	texto.h	/^    void setGenEspAtiva( bool gea ) { this->genEspAtiva = gea; }$/;"	f	class:Texto	access:public	signature:( bool gea )
Texto::setTipoGenEsp	texto.h	/^    void setTipoGenEsp( QString tipo ) { this->tipoGenEsp = tipo; }$/;"	f	class:Texto	access:public	signature:( QString tipo )
Texto::tipoGenEsp	texto.h	/^    QString tipoGenEsp;$/;"	m	class:Texto	access:private
Tipo	atributo.h	/^    enum Tipo { atributo, atributo_identif };$/;"	g	class:Atributo	access:public
Tipo	poligono.h	/^    enum Tipo { entidade, relacionamento, gen_esp, ent_associativa };$/;"	g	class:Poligono	access:public
TipoER	diagrama.h	/^    enum TipoER { entidade, relacionamento, gen_esp, ent_associativa, atributo, atributo_ident, linha, mouse };$/;"	g	class:Diagrama	access:public
Type	atributo.h	/^    enum { Type = UserType + 3 };$/;"	e	enum:Atributo::__anon2
Type	ligacao.h	/^    enum { Type = UserType + 2 };$/;"	e	enum:Ligacao::__anon1
Type	poligono.h	/^    enum { Type = UserType + 1 };$/;"	e	enum:Poligono::__anon3
Ui	mainwindow.h	/^namespace Ui {$/;"	n
VERTICES_H	atributo.h	4;"	d
_deslocamento	acoes/acao_mover.h	/^    QPointF _deslocamento;$/;"	m	class:AcaoMover	access:private
_items	acoes/acao_mover.h	/^    QList<QGraphicsItem *> _items;$/;"	m	class:AcaoMover	access:private
abrir	mainwindow.cpp	/^void MainWindow::abrir()$/;"	f	class:MainWindow	signature:()
abrir	mainwindow.h	/^    void abrir();$/;"	p	class:MainWindow	access:private	signature:()
abrirAction	mainwindow.h	/^    QAction *abrirAction;$/;"	m	class:MainWindow	access:private
abrirArquivo	mainwindow.cpp	/^void MainWindow::abrirArquivo(const QString nomeArquivo)$/;"	f	class:MainWindow	signature:(const QString nomeArquivo)
abrirArquivo	mainwindow.h	/^    void abrirArquivo(const QString nomeArquivo);$/;"	p	class:MainWindow	access:private	signature:(const QString nomeArquivo)
abrirAtributo	mainwindow.h	/^    Atributo *abrirAtributo;$/;"	m	class:MainWindow	access:private
abrirAutoRelacionamento1	mainwindow.h	/^    Texto *abrirAutoRelacionamento1;$/;"	m	class:MainWindow	access:private
abrirAutoRelacionamento2	mainwindow.h	/^    Texto *abrirAutoRelacionamento2;$/;"	m	class:MainWindow	access:private
abrirCardinalidade	mainwindow.h	/^    Cardinalidade *abrirCardinalidade;$/;"	m	class:MainWindow	access:private
abrirPoligono	mainwindow.h	/^    Poligono *abrirPoligono;$/;"	m	class:MainWindow	access:private
abrirPoligono2	mainwindow.h	/^    Poligono *abrirPoligono2;$/;"	m	class:MainWindow	access:private
abrirTexto	mainwindow.h	/^    Texto *abrirTexto;$/;"	m	class:MainWindow	access:private
acompanharObjeto	poligono.cpp	/^void Poligono::acompanharObjeto(const QPointF objNewPos)$/;"	f	class:Poligono	signature:(const QPointF objNewPos)
acompanharObjeto	poligono.h	/^    void acompanharObjeto(const QPointF objNewPos);$/;"	p	class:Poligono	access:public	signature:(const QPointF objNewPos)
addAcao	acoespilha.cpp	/^void AcoesPilha::addAcao(Acao *acao)$/;"	f	class:AcoesPilha	signature:(Acao *acao)
addAcao	acoespilha.h	/^    void addAcao(Acao * command);$/;"	p	class:AcoesPilha	access:public	signature:(Acao * command)
addPoligonoAssociado	ligacao.h	/^    public addPoligonoAssociado(Poligono * pol) {$/;"	f	class:Ligacao	access:public	signature:(Poligono * pol)
addPoligonosAssociado	poligono.h	/^    void addPoligonosAssociado(Poligono * pol) {$/;"	f	class:Poligono	access:public	signature:(Poligono * pol)
ajudaAction	mainwindow.h	/^    QAction *ajudaAction;$/;"	m	class:MainWindow	access:private
ajudaMenu	mainwindow.h	/^    QMenu *ajudaMenu;$/;"	m	class:MainWindow	access:private
ampliar	mainwindow.h	/^    QToolButton *ampliar;$/;"	m	class:MainWindow	access:private
antigoZoom	diagramaview.h	/^    qreal antigoZoom;$/;"	m	class:DiagramaView	access:private
arquivoMenu	mainwindow.h	/^    QMenu *arquivoMenu;$/;"	m	class:MainWindow	access:private
ativaMover	diagrama.h	/^    bool ativaMover;$/;"	m	class:Diagrama	access:private
ativaSelecao	diagrama.h	/^    bool ativaSelecao;$/;"	m	class:Diagrama	access:private
atr	diagrama.h	/^    Atributo *atr;$/;"	m	class:Diagrama	access:private
atributo	acoes/acao_criar_atributo.h	/^    Atributo * atributo;$/;"	m	class:AcaoCriarAtributo	access:private
atributo	atributo.h	/^    enum Tipo { atributo, atributo_identif };$/;"	e	enum:Atributo::Tipo
atributo	diagrama.h	/^    enum TipoER { entidade, relacionamento, gen_esp, ent_associativa, atributo, atributo_ident, linha, mouse };$/;"	e	enum:Diagrama::TipoER
atributo	mainwindow.h	/^    QToolButton *atributo;$/;"	m	class:MainWindow	access:private
atributo_associado	ligacao.h	/^    QList< Atributo * > atributo_associado;$/;"	m	class:Ligacao	access:private
atributo_ident	diagrama.h	/^    enum TipoER { entidade, relacionamento, gen_esp, ent_associativa, atributo, atributo_ident, linha, mouse };$/;"	e	enum:Diagrama::TipoER
atributo_identif	atributo.h	/^    enum Tipo { atributo, atributo_identif };$/;"	e	enum:Atributo::Tipo
atributo_identif	mainwindow.h	/^    QToolButton *atributo_identif;$/;"	m	class:MainWindow	access:private
atributosAssociados	poligono.h	/^    QList< Atributo * > atributosAssociados;$/;"	m	class:Poligono	access:private
atualCardinalidade	cardinalidade.h	/^    QString atualCardinalidade;$/;"	m	class:Cardinalidade	access:private
atualizaItem	poligono.cpp	/^void Poligono::atualizaItem()$/;"	f	class:Poligono	signature:()
atualizaItem	poligono.h	/^    void atualizaItem();$/;"	p	class:Poligono	access:public	signature:()
atualizaPos	cardinalidade.cpp	/^void Cardinalidade::atualizaPos()$/;"	f	class:Cardinalidade	signature:()
atualizaPos	cardinalidade.h	/^    void atualizaPos();$/;"	p	class:Cardinalidade	access:public	signature:()
atualizaPos	ligacao.cpp	/^void Ligacao::atualizaPos()$/;"	f	class:Ligacao	signature:()
atualizaPos	ligacao.h	/^    void atualizaPos();$/;"	p	class:Ligacao	access:public	signature:()
atualizaPos2	ligacao.cpp	/^void Ligacao::atualizaPos2()$/;"	f	class:Ligacao	signature:()
atualizaPos2	ligacao.h	/^    void atualizaPos2();$/;"	p	class:Ligacao	access:public	signature:()
autoRelacionamento	poligono.h	/^    bool autoRelacionamento;$/;"	m	class:Poligono	access:private
botoesER	mainwindow.h	/^    QButtonGroup *botoesER;$/;"	m	class:MainWindow	access:private
botoesERClicked	mainwindow.cpp	/^void MainWindow::botoesERClicked(int id)$/;"	f	class:MainWindow	signature:(int id)
botoesERClicked	mainwindow.h	/^    void botoesERClicked(int id);$/;"	p	class:MainWindow	access:private	signature:(int id)
botoesML	mainwindow.h	/^    QButtonGroup *botoesML;    $/;"	m	class:MainWindow	access:private
botoesMLClicked	mainwindow.cpp	/^void MainWindow::botoesMLClicked(int id)$/;"	f	class:MainWindow	signature:(int id)
botoesMLClicked	mainwindow.h	/^    void botoesMLClicked(int id);$/;"	p	class:MainWindow	access:private	signature:(int id)
botoesManip	mainwindow.h	/^    QButtonGroup *botoesManip;$/;"	m	class:MainWindow	access:private
botoesManipClicked	mainwindow.cpp	/^void MainWindow::botoesManipClicked(int id)$/;"	f	class:MainWindow	signature:(int id)
botoesManipClicked	mainwindow.h	/^    void botoesManipClicked(int id);$/;"	p	class:MainWindow	access:private	signature:(int id)
card	diagrama.h	/^    Texto *card;$/;"	m	class:Diagrama	access:private
cardItem	ligacao.h	/^    Cardinalidade *cardItem;$/;"	m	class:Ligacao	access:private
cardinalidade	acoes/acao_criar_ligacao.h	/^    Cardinalidade * cardinalidade;$/;"	m	class:AcaoCriarLigacao	access:private
cardinalidades_associadas	ligacao.h	/^    QList< Cardinalidade * > cardinalidades_associadas;$/;"	m	class:Ligacao	access:private
cardinalidades_associadas	poligono.h	/^    QList< Cardinalidade * > cardinalidades_associadas;$/;"	m	class:Poligono	access:private
cast1P	acoes/acao_criar_ligacao.h	/^    Poligono *cast1P, *cast2P;$/;"	m	class:AcaoCriarLigacao	access:private
cast1P	diagrama.h	/^    Poligono *cast1P;$/;"	m	class:Diagrama	access:private
cast2P	acoes/acao_criar_ligacao.h	/^    Poligono *cast1P, *cast2P;$/;"	m	class:AcaoCriarLigacao	access:private
cast2P	diagrama.h	/^    Poligono *cast2P;$/;"	m	class:Diagrama	access:private
castA	diagrama.h	/^    Atributo *castA;$/;"	m	class:Diagrama	access:private
castAtributo	mainwindow.h	/^    Atributo *castAtributo;$/;"	m	class:MainWindow	access:private
castAtributo2	mainwindow.h	/^    Atributo *castAtributo2;$/;"	m	class:MainWindow	access:private
castCardinalidade	mainwindow.h	/^    Cardinalidade *castCardinalidade;$/;"	m	class:MainWindow	access:private
castEntidade	mainwindow.h	/^    Poligono *castEntidade;$/;"	m	class:MainWindow	access:private
castItem1P	ligacao.h	/^    Poligono *castItem1P;$/;"	m	class:Ligacao	access:private
castItem2P	ligacao.h	/^    Poligono *castItem2P;$/;"	m	class:Ligacao	access:private
castItemA	ligacao.h	/^    Atributo *castItemA;$/;"	m	class:Ligacao	access:private
castLigacao	mainwindow.h	/^    Ligacao *castLigacao;$/;"	m	class:MainWindow	access:private
castLinha	mainwindow.h	/^    Ligacao *castLinha;$/;"	m	class:MainWindow	access:private
castPoligono	mainwindow.h	/^    Poligono *castPoligono;$/;"	m	class:MainWindow	access:private
castPoligono2	mainwindow.h	/^    Poligono *castPoligono2;$/;"	m	class:MainWindow	access:private
cast_linha	diagrama.h	/^    Ligacao *cast_linha;$/;"	m	class:Diagrama	access:private
cast_poligono	mainwindow.h	/^    Poligono *cast_poligono;$/;"	m	class:MainWindow	access:private
chamarTelaCardinalidade	cardinalidade.h	/^    Dialog chamarTelaCardinalidade;$/;"	m	class:Cardinalidade	access:private
chamarTelaTipoGenEsp	texto.h	/^    Dialog chamarTelaTipoGenEsp;$/;"	m	class:Texto	access:private
childPol	acoes/acao_criar_poligono.h	/^    Poligono * childPol;$/;"	m	class:AcaoCriarPoligono	access:private
circ	atributo.h	/^    QRectF *circ;$/;"	m	class:Atributo	access:private
conectado	atributo.h	/^    bool conectado;$/;"	m	class:Atributo	access:private
conectado	poligono.h	/^    bool conectado;$/;"	m	class:Poligono	access:private
count	texto.h	/^    int count;$/;"	m	class:Texto	access:private
countAtributo	diagrama.h	/^    int countAtributo;$/;"	m	class:Diagrama	access:private
countAtributoIdentificador	diagrama.h	/^    int countAtributoIdentificador;$/;"	m	class:Diagrama	access:private
countEntidade	diagrama.h	/^    int countEntidade;$/;"	m	class:Diagrama	access:private
countEntidadeAssociativa	diagrama.h	/^    int countEntidadeAssociativa;$/;"	m	class:Diagrama	access:private
countRelacionamento	diagrama.h	/^    int countRelacionamento;$/;"	m	class:Diagrama	access:private
createActions	mainwindow.cpp	/^void MainWindow::createActions()$/;"	f	class:MainWindow	signature:()
createActions	mainwindow.h	/^    void createActions();$/;"	p	class:MainWindow	access:private	signature:()
createMenu	mainwindow.cpp	/^void MainWindow::createMenu()$/;"	f	class:MainWindow	signature:()
createMenu	mainwindow.h	/^    void createMenu();$/;"	p	class:MainWindow	access:private	signature:()
createToolBar	mainwindow.cpp	/^void MainWindow::createToolBar()$/;"	f	class:MainWindow	signature:()
createToolBar	mainwindow.h	/^    void createToolBar();$/;"	p	class:MainWindow	access:private	signature:()
deletar	mainwindow.h	/^    QToolButton *deletar;$/;"	m	class:MainWindow	access:private
deletarSelecionado	mainwindow.cpp	/^void MainWindow::deletarSelecionado() {$/;"	f	class:MainWindow	signature:()
deletarSelecionado	mainwindow.h	/^    void deletarSelecionado();$/;"	p	class:MainWindow	access:private	signature:()
desfazer	acoespilha.cpp	/^bool AcoesPilha::desfazer()$/;"	f	class:AcoesPilha	signature:()
desfazer	acoespilha.h	/^    bool desfazer();$/;"	p	class:AcoesPilha	access:public	signature:()
desfazer	mainwindow.cpp	/^void MainWindow::desfazer()$/;"	f	class:MainWindow	signature:()
desfazer	mainwindow.h	/^    void desfazer();$/;"	p	class:MainWindow	access:private	signature:()
desfazerAcao	acao.h	/^    virtual void desfazerAcao() = 0;$/;"	p	class:Acao	access:public	signature:()
desfazerAcao	acoes/acao_criar_atributo.cpp	/^void AcaoCriarAtributo::desfazerAcao()$/;"	f	class:AcaoCriarAtributo	signature:()
desfazerAcao	acoes/acao_criar_atributo.h	/^    virtual void desfazerAcao();$/;"	p	class:AcaoCriarAtributo	access:public	signature:()
desfazerAcao	acoes/acao_criar_ligacao.cpp	/^void AcaoCriarLigacao::desfazerAcao()$/;"	f	class:AcaoCriarLigacao	signature:()
desfazerAcao	acoes/acao_criar_ligacao.h	/^    virtual void desfazerAcao();$/;"	p	class:AcaoCriarLigacao	access:public	signature:()
desfazerAcao	acoes/acao_criar_poligono.cpp	/^void AcaoCriarPoligono::desfazerAcao()$/;"	f	class:AcaoCriarPoligono	signature:()
desfazerAcao	acoes/acao_criar_poligono.h	/^    virtual void desfazerAcao();$/;"	p	class:AcaoCriarPoligono	access:public	signature:()
desfazerAcao	acoes/acao_mover.cpp	/^void AcaoMover::desfazerAcao()$/;"	f	class:AcaoMover	signature:()
desfazerAcao	acoes/acao_mover.h	/^    virtual void desfazerAcao();$/;"	p	class:AcaoMover	access:public	signature:()
desfazerAction	mainwindow.h	/^    QAction *desfazerAction;$/;"	m	class:MainWindow	access:private
desfazerItem	diagrama.h	/^    QStack<QGraphicsItem*> desfazerItem;$/;"	m	class:Diagrama	access:private
editarMenu	mainwindow.h	/^    QMenu *editarMenu;$/;"	m	class:MainWindow	access:private
ent_associativa	diagrama.h	/^    enum TipoER { entidade, relacionamento, gen_esp, ent_associativa, atributo, atributo_ident, linha, mouse };$/;"	e	enum:Diagrama::TipoER
ent_associativa	poligono.h	/^    enum Tipo { entidade, relacionamento, gen_esp, ent_associativa };$/;"	e	enum:Poligono::Tipo
entid_associativa	mainwindow.h	/^    QToolButton *entid_associativa;$/;"	m	class:MainWindow	access:private
entidade	diagrama.h	/^    enum TipoER { entidade, relacionamento, gen_esp, ent_associativa, atributo, atributo_ident, linha, mouse };$/;"	e	enum:Diagrama::TipoER
entidade	mainwindow.h	/^    QToolButton *entidade;$/;"	m	class:MainWindow	access:private
entidade	poligono.h	/^    enum Tipo { entidade, relacionamento, gen_esp, ent_associativa };$/;"	e	enum:Poligono::Tipo
entidadeFraca	mainwindow.h	/^    QToolButton *entidadeFraca;$/;"	m	class:MainWindow	access:private
entidadeFracaAtiva	ligacao.h	/^    bool entidadeFracaAtiva;$/;"	m	class:Ligacao	access:private
entidades_associadas	atributo.h	/^    QList< Poligono * > entidades_associadas;$/;"	m	class:Atributo	access:private
entidades_associadas	cardinalidade.h	/^    QList< Poligono * > entidades_associadas;$/;"	m	class:Cardinalidade	access:private
entidades_associadas	ligacao.h	/^    QList< Poligono * > entidades_associadas;$/;"	m	class:Ligacao	access:private
entidades_associativas_associadas	atributo.h	/^    QList < Poligono *> entidades_associativas_associadas;$/;"	m	class:Atributo	access:private
entidades_associativas_associadas	cardinalidade.h	/^    QList< Poligono * > entidades_associativas_associadas;$/;"	m	class:Cardinalidade	access:private
entidades_associativas_associadas	ligacao.h	/^    QList < Poligono * > entidades_associativas_associadas;$/;"	m	class:Ligacao	access:private
exibicaoToolBar	mainwindow.h	/^    QToolBar * exibicaoToolBar;$/;"	m	class:MainWindow	access:private
fazerAcao	acao.h	/^    virtual void fazerAcao() = 0;$/;"	p	class:Acao	access:public	signature:()
fazerAcao	acoes/acao_criar_atributo.cpp	/^void AcaoCriarAtributo::fazerAcao()$/;"	f	class:AcaoCriarAtributo	signature:()
fazerAcao	acoes/acao_criar_atributo.h	/^    virtual void fazerAcao();$/;"	p	class:AcaoCriarAtributo	access:public	signature:()
fazerAcao	acoes/acao_criar_ligacao.cpp	/^void AcaoCriarLigacao::fazerAcao()$/;"	f	class:AcaoCriarLigacao	signature:()
fazerAcao	acoes/acao_criar_ligacao.h	/^    virtual void fazerAcao();$/;"	p	class:AcaoCriarLigacao	access:public	signature:()
fazerAcao	acoes/acao_criar_poligono.cpp	/^void AcaoCriarPoligono::fazerAcao()$/;"	f	class:AcaoCriarPoligono	signature:()
fazerAcao	acoes/acao_criar_poligono.h	/^    virtual void fazerAcao();$/;"	p	class:AcaoCriarPoligono	access:public	signature:()
fazerAcao	acoes/acao_mover.cpp	/^void AcaoMover::fazerAcao()$/;"	f	class:AcaoMover	signature:()
fazerAcao	acoes/acao_mover.h	/^    virtual void fazerAcao();$/;"	p	class:AcaoMover	access:public	signature:()
focusOutEvent	texto.cpp	/^void Texto::focusOutEvent(QFocusEvent *event)$/;"	f	class:Texto	signature:(QFocusEvent *event)
focusOutEvent	texto.h	/^    void focusOutEvent(QFocusEvent *event);$/;"	p	class:Texto	access:public	signature:(QFocusEvent *event)
formas	mainwindow.h	/^    QToolBar *formas;$/;"	m	class:MainWindow	access:private
genEspAtiva	texto.h	/^    bool genEspAtiva;$/;"	m	class:Texto	access:private
gen_esp	diagrama.h	/^    enum TipoER { entidade, relacionamento, gen_esp, ent_associativa, atributo, atributo_ident, linha, mouse };$/;"	e	enum:Diagrama::TipoER
gen_esp	mainwindow.h	/^    QToolButton *gen_esp;$/;"	m	class:MainWindow	access:private
gen_esp	poligono.h	/^    enum Tipo { entidade, relacionamento, gen_esp, ent_associativa };$/;"	e	enum:Poligono::Tipo
generalizacao_especializacao_associada	ligacao.h	/^    QList< Poligono * > generalizacao_especializacao_associada;$/;"	m	class:Ligacao	access:private
getAtributoAssociado	ligacao.h	/^    QList< Atributo *> getAtributoAssociado() { return atributo_associado; }$/;"	f	class:Ligacao	access:public	signature:()
getAtributosAssociados	poligono.h	/^    QList<Atributo *> getAtributosAssociados() { return atributosAssociados; }$/;"	f	class:Poligono	access:public	signature:()
getAtualCardinalidade	cardinalidade.h	/^    QString getAtualCardinalidade() { return this->atualCardinalidade; }$/;"	f	class:Cardinalidade	access:public	signature:()
getAutoRelacionamento	poligono.h	/^    bool getAutoRelacionamento() { return this->autoRelacionamento; }$/;"	f	class:Poligono	access:public	signature:()
getCardItem	ligacao.h	/^    Cardinalidade * getCardItem() { return this->cardItem; }$/;"	f	class:Ligacao	access:public	signature:()
getCardinalidades_Associadas	ligacao.h	/^    QList< Cardinalidade *> getCardinalidades_Associadas() { return cardinalidades_associadas; }$/;"	f	class:Ligacao	access:public	signature:()
getCardinalidades_Associadas	poligono.h	/^    QList< Cardinalidade *> getCardinalidades_Associadas() { return cardinalidades_associadas; }$/;"	f	class:Poligono	access:public	signature:()
getCastItem1P	ligacao.h	/^    Poligono * getCastItem1P() { return this->castItem1P; }$/;"	f	class:Ligacao	access:public	signature:()
getCastItem2P	ligacao.h	/^    Poligono * getCastItem2P() { return this->castItem2P; }$/;"	f	class:Ligacao	access:public	signature:()
getCastItemA	ligacao.h	/^    Atributo * getCastItemA() { return this->castItemA; }$/;"	f	class:Ligacao	access:public	signature:()
getConectado	atributo.h	/^    bool getConectado() { return conectado; }$/;"	f	class:Atributo	access:public	signature:()
getConectado	poligono.h	/^    bool getConectado() { return this->conectado; }$/;"	f	class:Poligono	access:public	signature:()
getCount	texto.h	/^    int getCount() { return count; }$/;"	f	class:Texto	access:public	signature:()
getDesfazerItem	diagrama.h	/^    QStack<QGraphicsItem*> getDesfazerItem() { return this->desfazerItem; }$/;"	f	class:Diagrama	access:public	signature:()
getEntidadeFracaAtiva	ligacao.h	/^    bool getEntidadeFracaAtiva () { return this->entidadeFracaAtiva; }$/;"	f	class:Ligacao	access:public	signature:()
getEntidades_Associadas	atributo.h	/^    QList< Poligono *> getEntidades_Associadas() { return entidades_associadas; }$/;"	f	class:Atributo	access:public	signature:()
getEntidades_Associadas	cardinalidade.h	/^    QList< Poligono *> getEntidades_Associadas() { return entidades_associadas; }$/;"	f	class:Cardinalidade	access:public	signature:()
getEntidades_Associadas	ligacao.h	/^    QList< Poligono *> getEntidades_Associadas() { return entidades_associadas; }$/;"	f	class:Ligacao	access:public	signature:()
getEntidades_Associativas_Associadas	atributo.h	/^    QList< Poligono *> getEntidades_Associativas_Associadas() { return entidades_associativas_associadas; }$/;"	f	class:Atributo	access:public	signature:()
getEntidades_Associativas_Associadas	cardinalidade.h	/^    QList< Poligono *> getEntidades_Associativas_Associadas() { return entidades_associativas_associadas; }$/;"	f	class:Cardinalidade	access:public	signature:()
getEntidades_Associativas_Associadas	ligacao.h	/^    QList< Poligono *> getEntidades_Associativas_Associadas() { return entidades_associativas_associadas; }$/;"	f	class:Ligacao	access:public	signature:()
getGenEspAtiva	texto.h	/^    bool getGenEspAtiva() { return this->genEspAtiva; }$/;"	f	class:Texto	access:public	signature:()
getLigacao	acoes/acao_criar_ligacao.h	/^    Ligacao *getLigacao() { return this->ligacao; }$/;"	f	class:AcaoCriarLigacao	access:public	signature:()
getLinhaAssociada	atributo.h	/^    QList< QGraphicsLineItem *> getLinhaAssociada() { return linhaAssociada; }$/;"	f	class:Atributo	access:public	signature:()
getLinhas_Associadas	poligono.h	/^    QList< Ligacao *> getLinhas_Associadas() { return linhas_associadas; }$/;"	f	class:Poligono	access:public	signature:()
getPoligono	acoes/acao_criar_poligono.h	/^    Poligono * getPoligono() { return this->mainPol; }$/;"	f	class:AcaoCriarPoligono	access:public	signature:()
getPoligonoAssociado	poligono.h	/^    Poligono * getPoligonoAssociado() { return polig_associado; }$/;"	f	class:Poligono	access:public	signature:()
getPoligonoAssociados	poligono.h	/^    QList<Poligono *> getPoligonoAssociados() {$/;"	f	class:Poligono	access:public	signature:()
getPoligonosAssociadoOfType	ligacao.h	/^    public getPoligonosAssociadoOfType() {$/;"	f	class:Ligacao	access:public	signature:()
getRelacionamentos_Associados	atributo.h	/^    QList< Poligono *> getRelacionamentos_Associados() { return relacionamentos_associados; }$/;"	f	class:Atributo	access:public	signature:()
getRelacionamentos_Associados	cardinalidade.h	/^    QList< Poligono *> getRelacionamentos_Associados() { return relacionamentos_associados; }$/;"	f	class:Cardinalidade	access:public	signature:()
getRelacionamentos_Associados	ligacao.h	/^    QList< Poligono *> getRelacionamentos_Associados() { return relacionamentos_associados; }$/;"	f	class:Ligacao	access:public	signature:()
getTipo	atributo.h	/^    Tipo getTipo() { return tipo; }$/;"	f	class:Atributo	access:public	signature:()
getTipo	poligono.h	/^    Tipo getTipo() { return tipo; }$/;"	f	class:Poligono	access:public	signature:()
getTipoER	diagrama.h	/^    TipoER getTipoER() { return tipoER; }$/;"	f	class:Diagrama	access:public	signature:()
getTipoGenEsp	texto.h	/^    QString getTipoGenEsp () { return this->tipoGenEsp; }$/;"	f	class:Texto	access:public	signature:()
getTopCommand	acoespilha.cpp	/^Acao * AcoesPilha::getTopCommand()$/;"	f	class:AcoesPilha	signature:()
getTopCommand	acoespilha.h	/^    Acao * getTopCommand();$/;"	p	class:AcoesPilha	access:public	signature:()
insereCardinalidade	diagrama.h	/^    Cardinalidade *insereCardinalidade;$/;"	m	class:Diagrama	access:private
instanciaUnica	acoespilha.h	/^    static AcoesPilha * instanciaUnica()$/;"	f	class:AcoesPilha	access:public	signature:()
item1	acoes/acao_criar_ligacao.h	/^    QGraphicsItem * item1, * item2;$/;"	m	class:AcaoCriarLigacao	access:private
item1	diagrama.h	/^    QGraphicsItem *item1;$/;"	m	class:Diagrama	access:private
item2	acoes/acao_criar_ligacao.h	/^    QGraphicsItem * item1, * item2;$/;"	m	class:AcaoCriarLigacao	access:private
item2	diagrama.h	/^    QGraphicsItem *item2;$/;"	m	class:Diagrama	access:private
itemA	cardinalidade.h	/^    Poligono *itemA;$/;"	m	class:Cardinalidade	access:private
itemB	cardinalidade.h	/^    Poligono *itemB;$/;"	m	class:Cardinalidade	access:private
itemChange	atributo.cpp	/^QVariant Atributo::itemChange(GraphicsItemChange change, const QVariant &value)$/;"	f	class:Atributo	signature:(GraphicsItemChange change, const QVariant &value)
itemChange	atributo.h	/^    QVariant itemChange(GraphicsItemChange change, const QVariant &value);$/;"	p	class:Atributo	access:protected	signature:(GraphicsItemChange change, const QVariant &value)
itemChange	poligono.cpp	/^QVariant Poligono::itemChange(GraphicsItemChange change, const QVariant &value)$/;"	f	class:Poligono	signature:(GraphicsItemChange change, const QVariant &value)
itemChange	poligono.h	/^    QVariant itemChange(GraphicsItemChange change, const QVariant &value);$/;"	p	class:Poligono	access:protected	signature:(GraphicsItemChange change, const QVariant &value)
itemInserido	diagrama.h	/^    void itemInserido();$/;"	p	class:Diagrama	access:public	signature:()
itemInserido	mainwindow.cpp	/^void MainWindow::itemInserido()$/;"	f	class:MainWindow	signature:()
itemInserido	mainwindow.h	/^    void itemInserido();$/;"	p	class:MainWindow	access:private	signature:()
itemRemovido	poligono.cpp	/^void Poligono::itemRemovido()$/;"	f	class:Poligono	signature:()
itemRemovido	poligono.h	/^    void itemRemovido();$/;"	p	class:Poligono	access:public	signature:()
lig	diagrama.h	/^    Ligacao *lig;$/;"	m	class:Diagrama	access:private
lig	mainwindow.h	/^    Ligacao *lig;$/;"	m	class:MainWindow	access:private
ligacao	acoes/acao_criar_ligacao.h	/^    Ligacao * ligacao;$/;"	m	class:AcaoCriarLigacao	access:private
linha	diagrama.h	/^    enum TipoER { entidade, relacionamento, gen_esp, ent_associativa, atributo, atributo_ident, linha, mouse };$/;"	e	enum:Diagrama::TipoER
linhaAlterada	ligacao.h	/^    void linhaAlterada( QLineF nova_linha );$/;"	p	class:Ligacao	access:private	signature:( QLineF nova_linha )
linhaAssociada	atributo.h	/^    QList< QGraphicsLineItem * > linhaAssociada;$/;"	m	class:Atributo	access:private
linha_atual	cardinalidade.h	/^    Ligacao *linha_atual;$/;"	m	class:Cardinalidade	access:private
linhas	mainwindow.h	/^    QToolButton *linhas;$/;"	m	class:MainWindow	access:private
linhas_associadas	poligono.h	/^    QList< Ligacao * > linhas_associadas;$/;"	m	class:Poligono	access:private
lixo	mainwindow.h	/^    QList<QGraphicsItem *> lixo;$/;"	m	class:MainWindow	access:private
mScrool	diagramaview.h	/^    QSpinBox * mScrool;$/;"	m	class:DiagramaView	access:protected
main	main.cpp	/^int main(int argc, char *argv[])$/;"	f	signature:(int argc, char *argv[])
mainPol	acoes/acao_criar_poligono.h	/^    Poligono * mainPol;$/;"	m	class:AcaoCriarPoligono	access:private
manipulacoes	mainwindow.h	/^    QToolBar *manipulacoes;$/;"	m	class:MainWindow	access:private
mostrarCardinalidade	dialog.cpp	/^QString Dialog::mostrarCardinalidade()$/;"	f	class:Dialog	signature:()
mostrarCardinalidade	dialog.h	/^    QString mostrarCardinalidade();$/;"	p	class:Dialog	access:public	signature:()
mostrarTipoGenEsp	dialog.cpp	/^QString Dialog::mostrarTipoGenEsp()$/;"	f	class:Dialog	signature:()
mostrarTipoGenEsp	dialog.h	/^    QString mostrarTipoGenEsp();$/;"	p	class:Dialog	access:public	signature:()
mouse	diagrama.h	/^    enum TipoER { entidade, relacionamento, gen_esp, ent_associativa, atributo, atributo_ident, linha, mouse };$/;"	e	enum:Diagrama::TipoER
mouse	mainwindow.h	/^    QToolButton *mouse;$/;"	m	class:MainWindow	access:private
mouseLinha	mainwindow.h	/^    QToolBar *mouseLinha;$/;"	m	class:MainWindow	access:private
mouseMoveEvent	diagrama.cpp	/^void Diagrama::mouseMoveEvent(QGraphicsSceneMouseEvent *event)$/;"	f	class:Diagrama	signature:(QGraphicsSceneMouseEvent *event)
mouseMoveEvent	diagrama.h	/^    void mouseMoveEvent(QGraphicsSceneMouseEvent *event);$/;"	p	class:Diagrama	access:protected	signature:(QGraphicsSceneMouseEvent *event)
mousePressEvent	diagrama.cpp	/^void Diagrama::mousePressEvent(QGraphicsSceneMouseEvent *event)$/;"	f	class:Diagrama	signature:(QGraphicsSceneMouseEvent *event)
mousePressEvent	diagrama.h	/^    void mousePressEvent(QGraphicsSceneMouseEvent *event);$/;"	p	class:Diagrama	access:protected	signature:(QGraphicsSceneMouseEvent *event)
mousePressEvent	texto.cpp	/^void Texto::mousePressEvent(QGraphicsSceneMouseEvent *event)$/;"	f	class:Texto	signature:(QGraphicsSceneMouseEvent *event)
mousePressEvent	texto.h	/^    void mousePressEvent(QGraphicsSceneMouseEvent *event);$/;"	p	class:Texto	access:public	signature:(QGraphicsSceneMouseEvent *event)
mouseReleaseEvent	cardinalidade.cpp	/^void Cardinalidade::mouseReleaseEvent(QGraphicsSceneMouseEvent *event)$/;"	f	class:Cardinalidade	signature:(QGraphicsSceneMouseEvent *event)
mouseReleaseEvent	cardinalidade.h	/^    void mouseReleaseEvent(QGraphicsSceneMouseEvent *event);$/;"	p	class:Cardinalidade	access:protected	signature:(QGraphicsSceneMouseEvent *event)
mouseReleaseEvent	diagrama.cpp	/^void Diagrama::mouseReleaseEvent(QGraphicsSceneMouseEvent *event)$/;"	f	class:Diagrama	signature:(QGraphicsSceneMouseEvent *event)
mouseReleaseEvent	diagrama.h	/^    void mouseReleaseEvent(QGraphicsSceneMouseEvent *event);$/;"	p	class:Diagrama	access:protected	signature:(QGraphicsSceneMouseEvent *event)
mouseReleaseEvent	texto.cpp	/^void Texto::mouseReleaseEvent(QGraphicsSceneMouseEvent *event)$/;"	f	class:Texto	signature:(QGraphicsSceneMouseEvent *event)
mouseReleaseEvent	texto.h	/^    void mouseReleaseEvent(QGraphicsSceneMouseEvent *event);$/;"	p	class:Texto	access:public	signature:(QGraphicsSceneMouseEvent *event)
mudandoZoom	diagramaview.h	/^    void mudandoZoom(int zoomLevel);$/;"	p	class:DiagramaView	access:protected	signature:(int zoomLevel)
nomeAtributo	diagrama.h	/^    Texto *nomeAtributo;$/;"	m	class:Diagrama	access:private
nomeAtributoIdentificador	diagrama.h	/^    Texto *nomeAtributoIdentificador;$/;"	m	class:Diagrama	access:private
nomeEntidade	diagrama.h	/^    Texto *nomeEntidade;$/;"	m	class:Diagrama	access:private
nomeEntidadeAssociativa	diagrama.h	/^    Texto *nomeEntidadeAssociativa;$/;"	m	class:Diagrama	access:private
nomeLigacao1	acoes/acao_criar_ligacao.h	/^    Texto * nomeLigacao1, * nomeLigacao2;$/;"	m	class:AcaoCriarLigacao	access:private
nomeLigacao1	diagrama.h	/^    Texto *nomeLigacao1;$/;"	m	class:Diagrama	access:private
nomeLigacao1	ligacao.h	/^    Texto *nomeLigacao1, *nomeLigacao2;$/;"	m	class:Ligacao	access:private
nomeLigacao2	acoes/acao_criar_ligacao.h	/^    Texto * nomeLigacao1, * nomeLigacao2;$/;"	m	class:AcaoCriarLigacao	access:private
nomeLigacao2	diagrama.h	/^    Texto *nomeLigacao2;$/;"	m	class:Diagrama	access:private
nomeLigacao2	ligacao.h	/^    Texto *nomeLigacao1, *nomeLigacao2;$/;"	m	class:Ligacao	access:private
nomeRelacionamento	diagrama.h	/^    Texto *nomeRelacionamento;$/;"	m	class:Diagrama	access:private
novaAction	mainwindow.h	/^    QAction *novaAction;$/;"	m	class:MainWindow	access:private
novaJanela	mainwindow.cpp	/^void MainWindow::novaJanela()$/;"	f	class:MainWindow	signature:()
novaJanela	mainwindow.h	/^    void novaJanela();$/;"	p	class:MainWindow	access:private	signature:()
novaLinha	diagrama.h	/^    QGraphicsLineItem *novaLinha;$/;"	m	class:Diagrama	access:private
operator =	acoespilha.h	/^    void operator=(AcoesPilha const&); \/\/ Nao implementar$/;"	p	class:AcoesPilha	access:private	signature:(AcoesPilha const&)
organizarEntidades	mainwindow.cpp	/^void MainWindow::organizarEntidades(int direcao) \/\/ 0 = Hor, 1 = Vert$/;"	f	class:MainWindow	signature:(int direcao)
organizarEntidades	mainwindow.h	/^    void organizarEntidades(int direcao);$/;"	p	class:MainWindow	access:private	signature:(int direcao)
organizarHor	mainwindow.h	/^    QToolButton *organizarHor;$/;"	m	class:MainWindow	access:private
organizarVer	mainwindow.h	/^    QToolButton *organizarVer;$/;"	m	class:MainWindow	access:private
paint	atributo.cpp	/^void Atributo::paint(QPainter *painter, const QStyleOptionGraphicsItem *option, QWidget *widget)$/;"	f	class:Atributo	signature:(QPainter *painter, const QStyleOptionGraphicsItem *option, QWidget *widget)
paint	atributo.h	/^    void paint(QPainter *painter, const QStyleOptionGraphicsItem *option, QWidget *widget);$/;"	p	class:Atributo	access:public	signature:(QPainter *painter, const QStyleOptionGraphicsItem *option, QWidget *widget)
paint	ligacao.cpp	/^void Ligacao::paint(QPainter *painter, const QStyleOptionGraphicsItem *option, QWidget *widget)$/;"	f	class:Ligacao	signature:(QPainter *painter, const QStyleOptionGraphicsItem *option, QWidget *widget)
paint	ligacao.h	/^    void paint(QPainter *painter, const QStyleOptionGraphicsItem *option, QWidget *widget);$/;"	p	class:Ligacao	access:public	signature:(QPainter *painter, const QStyleOptionGraphicsItem *option, QWidget *widget)
paint	poligono.cpp	/^void Poligono::paint(QPainter *painter, const QStyleOptionGraphicsItem *option, QWidget *widget)$/;"	f	class:Poligono	signature:(QPainter *painter, const QStyleOptionGraphicsItem *option, QWidget *widget)
paint	poligono.h	/^    void paint(QPainter *painter, const QStyleOptionGraphicsItem *option, QWidget *widget);$/;"	p	class:Poligono	access:public	signature:(QPainter *painter, const QStyleOptionGraphicsItem *option, QWidget *widget)
paint	texto.cpp	/^void Texto::paint(QPainter *painter, const QStyleOptionGraphicsItem *option, QWidget *widget)$/;"	f	class:Texto	signature:(QPainter *painter, const QStyleOptionGraphicsItem *option, QWidget *widget)
paint	texto.h	/^    void paint(QPainter *painter, const QStyleOptionGraphicsItem *option, QWidget *widget);$/;"	p	class:Texto	access:public	signature:(QPainter *painter, const QStyleOptionGraphicsItem *option, QWidget *widget)
pilhaDeAcoes	acoespilha.h	/^    QList<Acao *> pilhaDeAcoes;$/;"	m	class:AcoesPilha	access:private
pilhaDeAcoes	diagrama.h	/^    AcoesPilha * pilhaDeAcoes;$/;"	m	class:Diagrama	access:private
pilhaDeAcoes	mainwindow.h	/^    AcoesPilha * pilhaDeAcoes;$/;"	m	class:MainWindow	access:private
podeDesfazer	acao.h	/^    virtual bool podeDesfazer() = 0;$/;"	p	class:Acao	access:public	signature:()
podeDesfazer	acoes/acao_criar_atributo.h	/^    virtual bool podeDesfazer() { return true; }$/;"	f	class:AcaoCriarAtributo	access:public	signature:()
podeDesfazer	acoes/acao_criar_ligacao.h	/^    virtual bool podeDesfazer() { return true; }$/;"	f	class:AcaoCriarLigacao	access:public	signature:()
podeDesfazer	acoes/acao_criar_poligono.h	/^    virtual bool podeDesfazer() { return true; }$/;"	f	class:AcaoCriarPoligono	access:public	signature:()
podeDesfazer	acoes/acao_mover.h	/^    virtual bool podeDesfazer() { return true; }$/;"	f	class:AcaoMover	access:public	signature:()
poli	diagrama.h	/^    Poligono *poli;$/;"	m	class:Diagrama	access:private
poli2	diagrama.h	/^    Poligono *poli2;$/;"	m	class:Diagrama	access:private
polig_associado	poligono.h	/^    Poligono * polig_associado;$/;"	m	class:Poligono	access:private
poligono	poligono.h	/^    QPolygonF poligono;$/;"	m	class:Poligono	access:private
poligonosAssociados	poligono.h	/^    QMap<Tipo, QList<Poligono *> > poligonosAssociados;$/;"	m	class:Poligono	access:private
poligonos_associados	ligacao.h	/^    QMap<Poligono::Tipo, QList<Poligono *> > poligonos_associados;$/;"	m	class:Ligacao	access:private
pontoInicial	diagrama.h	/^    QPointF pontoInicial;$/;"	m	class:Diagrama	access:private
popDesfazerItem	diagrama.h	/^    void popDesfazerItem() { this->desfazerItem.pop(); }$/;"	f	class:Diagrama	access:public	signature:()
popRefazerItem	diagrama.h	/^    void popRefazerItem() { this->refazerItem.pop(); }$/;"	f	class:Diagrama	access:public	signature:()
posAtual	acoespilha.h	/^    int posAtual;$/;"	m	class:AcoesPilha	access:private
posicao	acoes/acao_criar_atributo.h	/^    QPointF posicao;$/;"	m	class:AcaoCriarAtributo	access:private
posicao	acoes/acao_criar_poligono.h	/^    QPointF posicao;$/;"	m	class:AcaoCriarPoligono	access:private
posicaoAlterada	atributo.h	/^    void posicaoAlterada();$/;"	p	class:Atributo	access:protected	signature:()
posicaoAlterada	poligono.h	/^    void posicaoAlterada();$/;"	p	class:Poligono	access:protected	signature:()
posicaoAlterada	poligono.h	/^    void posicaoAlterada(const QPointF newPos);$/;"	p	class:Poligono	access:protected	signature:(const QPointF newPos)
reduzir	mainwindow.h	/^    QToolButton *reduzir;$/;"	m	class:MainWindow	access:private
refazer	acoespilha.cpp	/^bool AcoesPilha::refazer()$/;"	f	class:AcoesPilha	signature:()
refazer	acoespilha.h	/^    bool refazer();$/;"	p	class:AcoesPilha	access:public	signature:()
refazer	mainwindow.cpp	/^void MainWindow::refazer()$/;"	f	class:MainWindow	signature:()
refazer	mainwindow.h	/^    void refazer();$/;"	p	class:MainWindow	access:private	signature:()
refazerAction	mainwindow.h	/^    QAction *refazerAction;$/;"	m	class:MainWindow	access:private
refazerItem	diagrama.h	/^    QStack<QGraphicsItem*> refazerItem;$/;"	m	class:Diagrama	access:private
relacionamento	diagrama.h	/^    enum TipoER { entidade, relacionamento, gen_esp, ent_associativa, atributo, atributo_ident, linha, mouse };$/;"	e	enum:Diagrama::TipoER
relacionamento	mainwindow.h	/^    QToolButton *relacionamento;$/;"	m	class:MainWindow	access:private
relacionamento	poligono.h	/^    enum Tipo { entidade, relacionamento, gen_esp, ent_associativa };$/;"	e	enum:Poligono::Tipo
relacionamentos_associados	atributo.h	/^    QList< Poligono * > relacionamentos_associados;$/;"	m	class:Atributo	access:private
relacionamentos_associados	cardinalidade.h	/^    QList< Poligono * > relacionamentos_associados;$/;"	m	class:Cardinalidade	access:private
relacionamentos_associados	ligacao.h	/^    QList< Poligono * > relacionamentos_associados;$/;"	m	class:Ligacao	access:private
removeAtributoAssociado	poligono.h	/^    void removeAtributoAssociado( int index ) { this->atributosAssociados.removeAt(index); }$/;"	f	class:Poligono	access:public	signature:( int index )
removePoligonoAssociadoAt	ligacao.h	/^    public removePoligonoAssociadoAt(int index) {$/;"	f	class:Ligacao	access:public	signature:(int index)
removePoligonosAssociadoAt	poligono.h	/^    void removePoligonosAssociadoAt(int index) {$/;"	f	class:Poligono	access:public	signature:(int index)
removeTodasCardinalidadesAssociadas	poligono.h	/^    void removeTodasCardinalidadesAssociadas() { this->cardinalidades_associadas.erase(this->cardinalidades_associadas.begin(), this->cardinalidades_associadas.end()); }$/;"	f	class:Poligono	access:public	signature:()
removeTodasLinhasAssociadas	poligono.h	/^    void removeTodasLinhasAssociadas() { this->linhas_associadas.erase(this->linhas_associadas.begin(), this->linhas_associadas.end()); }$/;"	f	class:Poligono	access:public	signature:()
removeTodosAtributosAssociados	poligono.h	/^    void removeTodosAtributosAssociados() {this->atributosAssociados.erase( this->atributosAssociados.begin(), this->atributosAssociados.end()); }$/;"	f	class:Poligono	access:public	signature:()
removeTodosPoligonosAssociados	poligono.h	/^    void removeTodosPoligonosAssociados() {$/;"	f	class:Poligono	access:public	signature:()
removeTodosPoligonosOfType	ligacao.h	/^    public removeTodosPoligonosOfType() {$/;"	f	class:Ligacao	access:public	signature:()
remove_Cardinalidade_Associada	poligono.h	/^    void remove_Cardinalidade_Associada( int index ) { this->cardinalidades_associadas.removeAt(index); }$/;"	f	class:Poligono	access:public	signature:( int index )
remove_Linha_Associada	poligono.h	/^    void remove_Linha_Associada( int index ) { this->linhas_associadas.removeAt(index); }$/;"	f	class:Poligono	access:public	signature:( int index )
remover	poligono.cpp	/^void Poligono::remover()$/;"	f	class:Poligono	signature:()
remover	poligono.h	/^    void remover();$/;"	p	class:Poligono	access:public	signature:()
removido	poligono.h	/^    void removido();$/;"	p	class:Poligono	access:protected	signature:()
sairAction	mainwindow.h	/^    QAction *sairAction;$/;"	m	class:MainWindow	access:private
salvarAction	mainwindow.h	/^    QAction *salvarAction;$/;"	m	class:MainWindow	access:private
salvarArquivo	mainwindow.cpp	/^void MainWindow::salvarArquivo(const QString nomeArquivo)$/;"	f	class:MainWindow	signature:(const QString nomeArquivo)
salvarArquivo	mainwindow.h	/^    void salvarArquivo(const QString nomeArquivo);$/;"	p	class:MainWindow	access:private	signature:(const QString nomeArquivo)
salvarComo	mainwindow.cpp	/^void MainWindow::salvarComo()$/;"	f	class:MainWindow	signature:()
salvarComo	mainwindow.h	/^    void salvarComo();$/;"	p	class:MainWindow	access:private	signature:()
scene	acoes/acao_criar_atributo.h	/^    QGraphicsScene * scene;$/;"	m	class:AcaoCriarAtributo	access:private
scene	acoes/acao_criar_ligacao.h	/^    QGraphicsScene * scene;$/;"	m	class:AcaoCriarLigacao	access:private
scene	acoes/acao_criar_poligono.h	/^    QGraphicsScene * scene;$/;"	m	class:AcaoCriarPoligono	access:private
scene	mainwindow.h	/^    Diagrama *scene;$/;"	m	class:MainWindow	access:private
scroolZoom	mainwindow.h	/^    QSpinBox * scroolZoom;$/;"	m	class:MainWindow	access:private
setAtributoAssociado	ligacao.h	/^    void setAtributoAssociado( Atributo *aa ) { this->atributo_associado.push_back(aa); }$/;"	f	class:Ligacao	access:public	signature:( Atributo *aa )
setAtributosAssociados	poligono.h	/^    void setAtributosAssociados( Atributo *aa ) { this->atributosAssociados.push_back(aa); }$/;"	f	class:Poligono	access:public	signature:( Atributo *aa )
setAtualCardinalidade	cardinalidade.h	/^    void setAtualCardinalidade( QString c ) { this->atualCardinalidade = c; }$/;"	f	class:Cardinalidade	access:public	signature:( QString c )
setAutoRelacionamento	poligono.h	/^    void setAutoRelacionamento( bool a ) { this->autoRelacionamento = a; }$/;"	f	class:Poligono	access:public	signature:( bool a )
setCardinalidades_Associadas	ligacao.h	/^    void setCardinalidades_Associadas( Cardinalidade *ca ) { this->cardinalidades_associadas.push_back(ca); }$/;"	f	class:Ligacao	access:public	signature:( Cardinalidade *ca )
setCardinalidades_Associadas	poligono.h	/^    void setCardinalidades_Associadas( Cardinalidade *ca ) { this->cardinalidades_associadas.push_back(ca); }$/;"	f	class:Poligono	access:public	signature:( Cardinalidade *ca )
setConectado	atributo.h	/^    void setConectado( bool c ) { this->conectado = c; }$/;"	f	class:Atributo	access:public	signature:( bool c )
setConectado	poligono.h	/^    void setConectado( bool c ) { this->conectado = c; }$/;"	f	class:Poligono	access:public	signature:( bool c )
setCount	texto.h	/^    void setCount( int countR ) { this->count = countR; }$/;"	f	class:Texto	access:public	signature:( int countR )
setDesfazer	diagrama.cpp	/^void Diagrama::setDesfazer(QGraphicsItem *item)$/;"	f	class:Diagrama	signature:(QGraphicsItem *item)
setDesfazer	diagrama.h	/^    void setDesfazer( QGraphicsItem *item );$/;"	p	class:Diagrama	access:public	signature:( QGraphicsItem *item )
setEntidadeFracaAtiva	ligacao.h	/^    void setEntidadeFracaAtiva( bool set ) { this->entidadeFracaAtiva = set; }$/;"	f	class:Ligacao	access:public	signature:( bool set )
setEntidades_Associadas	atributo.h	/^    void setEntidades_Associadas( Poligono *ea ) { this->entidades_associadas.push_back(ea); }$/;"	f	class:Atributo	access:public	signature:( Poligono *ea )
setEntidades_Associadas	cardinalidade.h	/^    void setEntidades_Associadas( Poligono *ea ) { this->entidades_associadas.push_back(ea); }$/;"	f	class:Cardinalidade	access:public	signature:( Poligono *ea )
setEntidades_Associativas_Associadas	atributo.h	/^    void setEntidades_Associativas_Associadas( Poligono *eaa ) { this->entidades_associativas_associadas.push_back(eaa); }$/;"	f	class:Atributo	access:public	signature:( Poligono *eaa )
setEntidades_Associativas_Associadas	cardinalidade.h	/^    void setEntidades_Associativas_Associadas( Poligono *eaa ) { this->entidades_associativas_associadas.push_back(eaa); }$/;"	f	class:Cardinalidade	access:public	signature:( Poligono *eaa )
setGenEspAtiva	texto.h	/^    void setGenEspAtiva( bool gea ) { this->genEspAtiva = gea; }$/;"	f	class:Texto	access:public	signature:( bool gea )
setItemA	cardinalidade.h	/^    void setItemA ( Poligono *item ) { this->itemA = item; }$/;"	f	class:Cardinalidade	access:public	signature:( Poligono *item )
setItemB	cardinalidade.h	/^    void setItemB ( Poligono *item ) { this->itemB = item; }$/;"	f	class:Cardinalidade	access:public	signature:( Poligono *item )
setLinhaAssociada	atributo.h	/^    void setLinhaAssociada( QGraphicsLineItem *la ) { this->linhaAssociada.push_back(la); }$/;"	f	class:Atributo	access:public	signature:( QGraphicsLineItem *la )
setLinha_Atual	cardinalidade.h	/^    void setLinha_Atual ( Ligacao *linha ) { this->linha_atual = linha; }$/;"	f	class:Cardinalidade	access:public	signature:( Ligacao *linha )
setLinhas_Associadas	poligono.h	/^    void setLinhas_Associadas( Ligacao *la ) { this->linhas_associadas.push_back(la); }$/;"	f	class:Poligono	access:public	signature:( Ligacao *la )
setPoligonoAssociado	poligono.h	/^    void setPoligonoAssociado(Poligono * pol) { polig_associado = pol; }$/;"	f	class:Poligono	access:public	signature:(Poligono * pol)
setRelacionamento_Associados	cardinalidade.h	/^    void setRelacionamento_Associados( Poligono *ra ) { this->relacionamentos_associados.push_back(ra); }$/;"	f	class:Cardinalidade	access:public	signature:( Poligono *ra )
setRelacionamentos_Associados	atributo.h	/^    void setRelacionamentos_Associados( Poligono *ra ) { this->relacionamentos_associados.push_back(ra); }$/;"	f	class:Atributo	access:public	signature:( Poligono *ra )
setScrool	diagramaview.cpp	/^void DiagramaView::setScrool(QSpinBox *scrool)$/;"	f	class:DiagramaView	signature:(QSpinBox *scrool)
setScrool	diagramaview.h	/^    void setScrool(QSpinBox * scrool);$/;"	p	class:DiagramaView	access:public	signature:(QSpinBox * scrool)
setTipo	atributo.h	/^    void setTipo(Tipo tipo) { this->tipo = tipo; }$/;"	f	class:Atributo	access:public	signature:(Tipo tipo)
setTipo	poligono.h	/^    void setTipo(Tipo tipo) { this->tipo = tipo; }$/;"	f	class:Poligono	access:public	signature:(Tipo tipo)
setTipoER	diagrama.h	/^    void setTipoER( TipoER tipo ) { this->tipoER = tipo; }$/;"	f	class:Diagrama	access:public	signature:( TipoER tipo )
setTipoGenEsp	texto.h	/^    void setTipoGenEsp( QString tipo ) { this->tipoGenEsp = tipo; }$/;"	f	class:Texto	access:public	signature:( QString tipo )
setarZoom	diagramaview.cpp	/^void DiagramaView::setarZoom(int zoomLevel)$/;"	f	class:DiagramaView	signature:(int zoomLevel)
setarZoom	diagramaview.h	/^    void setarZoom(int zoomLevel);$/;"	p	class:DiagramaView	access:public	signature:(int zoomLevel)
shape	ligacao.cpp	/^QPainterPath Ligacao::shape() const$/;"	f	class:Ligacao	signature:() const
shape	ligacao.h	/^    QPainterPath shape() const;$/;"	p	class:Ligacao	access:public	signature:() const
sobre	mainwindow.cpp	/^void MainWindow::sobre()$/;"	f	class:MainWindow	signature:()
sobre	mainwindow.h	/^    void sobre();$/;"	p	class:MainWindow	access:private	signature:()
temp	ligacao.h	/^    QPointF temp;$/;"	m	class:Ligacao	access:private
tipo	atributo.h	/^    Tipo tipo;$/;"	m	class:Atributo	access:private
tipo	poligono.h	/^    Tipo tipo;$/;"	m	class:Poligono	access:private
tipoER	diagrama.h	/^    TipoER tipoER;$/;"	m	class:Diagrama	access:private
tipoGenEsp	diagrama.h	/^    Texto *tipoGenEsp;$/;"	m	class:Diagrama	access:private
tipoGenEsp	texto.h	/^    QString tipoGenEsp;$/;"	m	class:Texto	access:private
type	atributo.h	/^    int type() const$/;"	f	class:Atributo	access:public	signature:() const
type	ligacao.h	/^    int type() const$/;"	f	class:Ligacao	access:public	signature:() const
type	poligono.h	/^    int type() const$/;"	f	class:Poligono	access:public	signature:() const
ui	mainwindow.h	/^    Ui::MainWindow *ui;$/;"	m	class:MainWindow	access:private
view	mainwindow.h	/^    DiagramaView *view;$/;"	m	class:MainWindow	access:private
wheelEvent	diagramaview.cpp	/^void DiagramaView::wheelEvent(QWheelEvent *event)$/;"	f	class:DiagramaView	signature:(QWheelEvent *event)
wheelEvent	diagramaview.h	/^    virtual void wheelEvent(QWheelEvent *event);$/;"	p	class:DiagramaView	access:protected	signature:(QWheelEvent *event)
~Acao	acao.h	/^    virtual ~Acao() {}$/;"	f	class:Acao	access:public	signature:()
~MainWindow	mainwindow.cpp	/^MainWindow::~MainWindow()$/;"	f	class:MainWindow	signature:()
~MainWindow	mainwindow.h	/^    ~MainWindow();$/;"	p	class:MainWindow	access:public	signature:()
